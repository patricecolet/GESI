#N canvas 1957 131 522 265 10;
#N canvas 29 51 450 300 cpu 0;
#X obj 128 148 cputime;
#X obj 128 38 loadbang;
#X msg 128 58 1;
#X floatatom 128 78 0 0 0 0 - - -;
#X obj 128 127 t b b;
#X obj 128 188 * 0.1;
#X obj 128 168 int;
#X text 173 78 <-- on/off;
#X msg 127 210 cpu \$1;
#X obj 126 233 s netsend;
#X floatatom 187 211 5 0 0 0 - - -, f 5;
#X obj 128 106 metro 500;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 4 0 0 0;
#X connect 4 1 0 1;
#X connect 5 0 8 0;
#X connect 5 0 10 0;
#X connect 6 0 5 0;
#X connect 11 0 4 0;
#X restore 273 163 pd cpu;
#N canvas 31 88 450 300 audioOut 0;
#X obj 76 197 dac~;
#X obj 36 199 env~;
#X obj 77 267 s netsend;
#X obj 201 202 env~;
#X msg 46 234 vu1 \$1;
#X msg 114 236 vu2 \$1;
#X floatatom 200 227 5 0 0 0 - - -, f 5;
#X floatatom 12 244 5 0 0 0 - - -, f 5;
#X obj 140 160 *~;
#X obj 237 109 line~;
#X obj 241 84 pack 0 200;
#X obj 36 154 *~;
#X obj 31 29 catch~ mono1;
#X obj 135 32 catch~ mono2;
#X obj 241 22 r potar;
#X floatatom 252 47 5 0 0 0 - - -, f 5;
#X obj 314 24 loadbang;
#X msg 314 45 1;
#X connect 1 0 4 0;
#X connect 1 0 7 0;
#X connect 3 0 5 0;
#X connect 3 0 6 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 8 0 0 1;
#X connect 8 0 3 0;
#X connect 9 0 8 1;
#X connect 9 0 11 1;
#X connect 10 0 9 0;
#X connect 11 0 1 0;
#X connect 11 0 0 0;
#X connect 12 0 11 0;
#X connect 12 0 8 0;
#X connect 14 0 10 0;
#X connect 14 0 15 0;
#X connect 16 0 17 0;
#X connect 17 0 10 0;
#X restore 138 169 pd audioOut;
#N canvas 31 73 442 373 preview 0;
#X obj 161 5 r netreceive;
#X obj 30 181 lsql;
#X obj 30 124 list prepend sql;
#X obj 30 143 list trim;
#X obj 35 162 r sql-open;
#X msg 30 63 select filename from entries where id = \$1, f 14;
#X obj 136 248 readsf~;
#X msg 30 203 open \$1 \, 1, f 5;
#X obj 81 274 throw~ mono1;
#X obj 200 273 throw~ mono2;
#X obj 161 24 route play stop;
#X msg 316 120 0;
#X connect 0 0 10 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 8 0;
#X connect 6 0 9 0;
#X connect 7 0 6 0;
#X connect 10 0 5 0;
#X connect 10 1 11 0;
#X connect 11 0 6 0;
#X restore 138 63 pd preview;
#X obj 138 128 writeadc;
#N canvas 171 361 415 454 readsound 0;
#X obj 5 212 lsql;
#X obj 16 188 r sql-open;
#X msg 5 137 sql select * from readsound where preset=\$1, f 17;
#N canvas 912 420 690 602 \$0readsounds 0;
#X restore 294 29 pd \$0readsounds;
#X msg 37 93 clear;
#X obj 5 58 t a b;
#X msg 174 111 0, f 2;
#X obj 37 115 s pd-\$0readsounds;
#X obj 37 282 s pd-\$0readsounds;
#X msg 5 392 loadbang;
#X obj 37 327 list;
#X obj 37 367 s rs-sql-open;
#X obj 62 307 r sql-open;
#X obj 37 347 list trim;
#X obj 5 22 route readSoundInit;
#X obj 5 3 r netreceive;
#X obj 153 24 r INIT;
#X obj 5 412 s pd-readsound.pd;
#N canvas 704 197 296 472 prepareMessage 0;
#X obj 13 25 inlet;
#X obj 19 419 outlet;
#X obj 36 97 f;
#X obj 65 96 + 1;
#X obj 37 137 + 10;
#X obj 13 180 list prepend \$0;
#X obj 13 161 list prepend;
#X msg 13 200 obj \$2 \$2 readsound \$1 \$5 4096 mono1, f 10;
#X obj 20 399 list trim;
#X obj 112 208 r sql-open;
#X obj 112 228 route open;
#X obj 36 117 * 40;
#X obj 155 163 list split 8;
#X obj 191 183 list split 1;
#X obj 79 294 symbol2list;
#X obj 13 46 t a b a;
#X obj 20 380 list;
#X obj 13 285 t b a;
#X obj 61 315 f;
#X obj 61 334 max 1;
#X obj 61 353 until;
#X obj 191 228 route float;
#X obj 113 25 inlet;
#X obj 13 265 list append;
#X connect 0 0 15 0;
#X connect 2 0 3 0;
#X connect 2 0 11 0;
#X connect 3 0 2 1;
#X connect 4 0 6 1;
#X connect 5 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 23 0;
#X connect 8 0 1 0;
#X connect 9 0 10 0;
#X connect 10 0 23 1;
#X connect 11 0 4 0;
#X connect 12 1 13 0;
#X connect 13 0 21 0;
#X connect 14 0 18 1;
#X connect 15 0 6 0;
#X connect 15 1 2 0;
#X connect 15 2 12 0;
#X connect 16 0 8 0;
#X connect 17 0 18 0;
#X connect 17 1 16 1;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 16 0;
#X connect 21 1 14 0;
#X connect 22 0 2 1;
#X connect 23 0 17 0;
#X restore 5 235 pd prepareMessage;
#X obj 169 255 print BUILD_READSOUND;
#X obj 5 303 t b b;
#X obj 5 257 t b a;
#X connect 0 0 18 0;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 4 0 7 0;
#X connect 5 0 2 0;
#X connect 5 1 4 0;
#X connect 5 1 6 0;
#X connect 6 0 18 1;
#X connect 9 0 17 0;
#X connect 10 0 13 0;
#X connect 12 0 10 1;
#X connect 13 0 11 0;
#X connect 14 0 5 0;
#X connect 15 0 14 0;
#X connect 16 0 5 0;
#X connect 18 0 21 0;
#X connect 20 0 9 0;
#X connect 20 1 10 0;
#X connect 21 0 20 0;
#X connect 21 1 8 0;
#X connect 21 1 19 0;
#X restore 138 96 pd readsound;
#N canvas 539 344 469 599 gpio 0;
#X obj 6 157 lsql;
#X obj 54 130 r sql-open;
#X msg 54 64 clear;
#X obj 6 63 t a b;
#X obj 33 219 f;
#X obj 59 220 + 1;
#X msg 50 199 0;
#X obj 6 199 t a b;
#X obj 34 259 + 10;
#X obj 6 311 list prepend \$0;
#X obj 6 283 list prepend;
#X obj 6 405 list trim;
#X obj 332 304 r sql-open;
#X obj 332 324 route open;
#X obj 6 386 list append /media/sdext/flask/gesidb/gesidb.db;
#X obj 6 424 t a a;
#X obj 33 239 * 40;
#X obj 6 484 t a b;
#X obj 33 507 list;
#X obj 54 488 r sql-open;
#X obj 33 526 list trim;
#X obj 6 14 r netreceive;
#X msg 6 107 sql select * from sensors where preset=\$1;
#N canvas 830 436 690 602 \$0sensors 0;
#X obj 10 10 fir 1003 None 0 0 0 /home/patco/.gesi/gesidb.db;
#X obj 50 50 switch 1003 None None 0 0 /home/patco/.gesi/gesidb.db
;
#X restore 159 48 pd \$0sensors;
#X obj 42 336 print SENSORS;
#X obj 6 36 route sensorsInit;
#X msg 131 4 0;
#X obj 33 545 s sen-sql-open;
#X obj 33 444 s pd-\$0sensors;
#X msg 6 363 obj \$2 \$2 \$6 \$1 \$7 \$8 \$9 \$10;
#X obj 54 84 s pd-\$0sensors;
#N canvas 31 58 450 300 symbol2float 0;
#X obj 250 93 list split 1;
#X obj 250 143 s2l;
#X obj 250 165 unpack float;
#X obj 216 74 list split 6;
#X obj 216 54 inlet;
#X obj 216 245 list;
#X obj 348 208 list;
#X obj 216 267 outlet;
#X connect 0 0 1 0;
#X connect 0 1 6 1;
#X connect 1 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 3 1 0 0;
#X connect 4 0 3 0;
#X connect 5 0 7 0;
#X connect 6 0 5 1;
#X restore 6 178 pd symbol2float;
#X msg 256 462 \; pd-\$1sensors loadbang \;;
#X obj 253 414 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 255 438 \$0;
#X msg 6 564 \; pd-\$4sensors loadbang \;;
#X obj 215 525 print BUILD_SENSOR;
#X connect 0 0 31 0;
#X connect 1 0 0 0;
#X connect 2 0 30 0;
#X connect 3 0 22 0;
#X connect 3 1 2 0;
#X connect 3 1 6 0;
#X connect 4 0 5 0;
#X connect 4 0 16 0;
#X connect 5 0 4 1;
#X connect 6 0 4 1;
#X connect 7 0 10 0;
#X connect 7 1 4 0;
#X connect 8 0 10 1;
#X connect 9 0 24 0;
#X connect 9 0 29 0;
#X connect 10 0 9 0;
#X connect 11 0 15 0;
#X connect 12 0 13 0;
#X connect 13 0 14 1;
#X connect 14 0 11 0;
#X connect 15 0 17 0;
#X connect 15 1 28 0;
#X connect 16 0 8 0;
#X connect 17 0 35 0;
#X connect 17 0 36 0;
#X connect 17 1 18 0;
#X connect 18 0 20 0;
#X connect 19 0 18 1;
#X connect 20 0 27 0;
#X connect 21 0 25 0;
#X connect 22 0 0 0;
#X connect 25 0 3 0;
#X connect 26 0 3 0;
#X connect 29 0 14 0;
#X connect 31 0 7 0;
#X connect 33 0 34 0;
#X connect 34 0 32 0;
#X restore 270 126 pd gpio;
#X text 30 1 GESI main patch;
#N canvas 29 51 450 300 network 0;
#X obj 127 231 netsend 1;
#X obj 128 207 spigot;
#X obj 292 98 r netreceive;
#X obj 292 118 route ip;
#X msg 292 200 connect \$1 3001;
#X obj 292 138 t a b;
#X obj 292 174 symbol;
#X obj 198 173 spigot;
#X msg 219 199 disconnect;
#X obj 30 57 s netreceive;
#X obj 128 140 list trim;
#X obj 128 120 list prepend send;
#X obj 128 100 r netsend;
#X obj 117 57 print net;
#X text 165 259 pd -stderr 2>&1 | pdsend 9999 localhost udp;
#X obj 30 21 netreceive 3001 1;
#X connect 0 0 1 1;
#X connect 0 0 7 1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 4 0 0 0;
#X connect 5 0 6 0;
#X connect 5 1 7 0;
#X connect 6 0 4 0;
#X connect 7 0 8 0;
#X connect 8 0 0 0;
#X connect 10 0 1 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 15 0 9 0;
#X connect 15 0 13 0;
#X restore 23 109 pd network;
#N canvas 2171 593 269 171 sql 1;
#X obj 19 105 lsql;
#X obj 51 80 r sql-open;
#X obj 19 127 print RES;
#X floatatom 56 107 5 0 0 1 rows_affected - -, f 5;
#N canvas 2610 489 572 352 TABLES 1;
#X obj 39 255 list prepend sql;
#X obj 39 274 list trim;
#N canvas 31 140 750 492 tableCreate 0;
#X obj 52 468 outlet;
#X msg 138 242 CREATE TABLE sensors(id integer primary key : preset
integer : title varchar(50) : sensor char(50) : send2 text : input
text : window integer : refresh integer) \, insert into sensors values(NULL
: NULL : NULL : NULL : NULL : NULL : NULL : NULL );
#X msg 149 323 CREATE TABLE readsound(id integer primary key : preset
integer : title varchar(50) : largo integer : adagio integer : moderato
integer : allegro integer : presto integer : voices integer : outputs
text : environments text );
#X msg 59 43 CREATE TABLE entries(id integer primary key: title varchar(50)
: filename varchar(50): blacklist integer : samplerate integer : length
integer : headersize integer : channels integer : resolution integer:
endianness varchar(50) : format integer);
#X msg 70 118 CREATE TABLE environments(id integer primary key autoincrement
unique : sound_id integer : title varchar(50) : density varchar(50)
: volume integer: pitch integer: start integer: stop integer: pan integer)
;
#X text 59 19 table for managing sound files;
#X msg 82 180 CREATE TABLE density(id integer primary key : env_title
varchar(50) : density varchar(50): density_index integer : audio_out
integer);
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 6 0 0 0;
#X restore 39 8 pd tableCreate;
#X obj 38 300 outlet, f 8;
#X msg 118 199 select count() from environments where title='pat';
#N canvas 2523 112 450 300 tableRead 1;
#X msg 97 94 select * from environments;
#X msg 118 161 select * from readsound;
#X msg 89 75 select * from entries where (blacklist = 1);
#X msg 111 140 select * from sensors;
#X msg 81 56 select * from entries where (blacklist = 0);
#X text 174 35 read tables;
#X msg 102 117 select * from density;
#X obj 53 493 outlet;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 6 0 7 0;
#X restore 49 30 pd tableRead;
#N canvas 2989 130 450 300 tableDelete 1;
#X msg 148 40 DELETE from entries;
#X msg 161 122 DELETE from readsound;
#X msg 154 60 DELETE from environments;
#X msg 160 102 DELETE from sensors;
#X msg 142 19 DELETE from entries where id = '\$1';
#X floatatom 142 2 5 0 0 0 - - -, f 5;
#X text 189 0 delete contents;
#X obj 70 213 outlet;
#X msg 159 81 DELETE from density;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 4 0;
#X connect 8 0 7 0;
#X restore 58 50 pd tableDelete;
#N canvas 31 68 450 300 tableErase 0;
#X msg 254 150 DROP table readsound;
#X msg 238 77 DROP table environments;
#X msg 241 56 DROP table entries;
#X msg 253 130 DROP table sensors;
#X text 250 36 erase tables;
#X obj 63 191 outlet;
#X msg 238 99 DROP table density;
#X connect 0 0 5 0;
#X connect 1 0 5 0;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 6 0 5 0;
#X restore 64 71 pd tableErase;
#X msg 265 81 sql select distinct title from environment;
#X msg 100 126 sql select distinct title from environment;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X connect 9 0 0 0;
#X restore 14 9 pd TABLES;
#N canvas 2306 190 546 843 ANALYSIS 1;
#X obj 116 11 r netreceive;
#X obj 352 110 readsf~;
#X obj 116 30 route analysis;
#X msg 352 82 open \$1 \, 1;
#X obj 356 46 f;
#X obj 383 46 + 1;
#X obj 116 50 route done;
#N canvas 31 249 412 267 sound_info 0;
#X obj 101 113 soundfile_info;
#X obj 62 28 inlet;
#X obj 268 221 outlet;
#X obj 268 197 textfile;
#X obj 238 95 inlet;
#X obj 238 164 until;
#X obj 238 115 route bang;
#X msg 311 166 rewind;
#X obj 238 135 t b b;
#X obj 100 134 list prepend add;
#X obj 100 154 list trim;
#X obj 321 221 outlet;
#X obj 62 49 list split 3;
#X msg 265 52 read \$1;
#X obj 101 70 list prepend read;
#X obj 101 92 list trim;
#X connect 0 0 9 0;
#X connect 1 0 12 0;
#X connect 3 0 2 0;
#X connect 3 1 5 1;
#X connect 3 1 11 0;
#X connect 4 0 6 0;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 6 1 3 0;
#X connect 7 0 3 0;
#X connect 8 0 5 0;
#X connect 8 1 7 0;
#X connect 9 0 10 0;
#X connect 10 0 3 0;
#X connect 12 1 14 0;
#X connect 14 0 15 0;
#X connect 15 0 0 0;
#X restore 148 286 pd sound_info;
#X msg 236 259 clear;
#X obj 149 507 outlet;
#X msg 340 373 sql update entries set samplerate = '\$1': length =
'\$3': headersize = '\$4': channels = '\$5': resolution = '\$6': endianness
= '\$7': format = '\$8', f 22;
#X obj 302 288 text define entries;
#X obj 184 155 text set entries;
#X obj 116 108 t b b;
#X obj 116 213 text sequence entries, f 8;
#X obj 427 204 print ANALYSYS;
#X obj 184 72 list split 1;
#X msg 302 268 clear;
#X msg 116 165 line 0 \, auto, f 6;
#X obj 116 262 t a a;
#X msg 265 367 \$3;
#X obj 149 387 list append 44100;
#X msg 149 408 sql insert into environments values ( NULL : '\$1' :
'\$2' : '\$3' : '100' : '60' : '0' : '\$4' : '0'), f 22;
#X obj 184 117 list;
#X obj 184 96 t a a;
#X obj 148 366 list split 3;
#X msg 185 552 sql insert into density(env_title:density) select *
from (select distinct title from environments):(select distinct density
from environments where title in (select distinct title from environments))
, f 31;
#X obj 69 78 t b b;
#X msg 43 767 sql update density set density_index=3 where id=23;
#X msg 30 729 sql update density set density_index=\$1 where id=\$1
;
#X obj 133 680 mod 5;
#X obj 132 704 + 1;
#X obj 129 604 until;
#X obj 129 626 f;
#X obj 128 651 + 1;
#X msg 129 583 34;
#X connect 0 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 6 0 27 0;
#X connect 6 1 16 0;
#X connect 7 0 20 0;
#X connect 7 0 10 0;
#X connect 8 0 7 1;
#X connect 10 0 9 0;
#X connect 13 0 18 0;
#X connect 13 1 8 0;
#X connect 14 0 19 0;
#X connect 14 1 7 1;
#X connect 16 0 24 0;
#X connect 16 1 23 1;
#X connect 17 0 11 0;
#X connect 18 0 14 0;
#X connect 19 0 25 0;
#X connect 19 1 7 0;
#X connect 19 1 15 0;
#X connect 20 0 21 1;
#X connect 21 0 22 0;
#X connect 22 0 9 0;
#X connect 23 0 12 0;
#X connect 24 0 23 0;
#X connect 24 1 12 1;
#X connect 25 0 21 0;
#X connect 26 0 9 0;
#X connect 27 1 13 0;
#X connect 28 0 9 0;
#X connect 29 0 9 0;
#X connect 30 0 31 0;
#X connect 30 0 33 1;
#X connect 31 0 29 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 30 0;
#X connect 35 0 32 0;
#X restore 30 36 pd ANALYSIS;
#X connect 0 0 2 0;
#X connect 0 1 3 0;
#X connect 1 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X restore 23 138 pd sql;
#N canvas 251 654 276 190 init 0;
#X obj 15 9 loadbang;
#X obj 15 29 del 2000;
#X obj 15 49 home;
#X msg 15 69 \; pd dsp 1 \; sql-open open \$1/.gesi/gesidb.db \; INIT
0 \;;
#X obj 92 34 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 2 0;
#X restore 23 62 pd init;
#N canvas 706 585 450 300 webserver 0;
#X floatatom 201 242 5 0 0 0 - - -, f 5;
#X floatatom 229 212 5 0 0 0 - - -, f 5;
#N canvas 313 113 1235 625 websocket-server 0;
#X obj 1033 197 r websockets-list;
#X obj 924 21 inlet;
#X obj 265 22 inlet;
#X obj 909 574 outlet;
#X obj 298 576 outlet;
#X obj 611 269 i;
#X obj 584 293 <;
#X obj 584 242 t f b;
#X obj 584 319 select 1;
#X obj 584 21 inlet;
#N canvas 84 51 488 668 remove_socket 0;
#X obj 120 208 i;
#X obj 37 185 list;
#X obj 37 208 list split 1;
#X obj 121 426 list prepend;
#X obj 121 401 i;
#X obj 37 233 t f f;
#X obj 37 256 ==;
#X obj 37 320 list;
#X obj 37 343 route bang;
#X obj 121 451 t l l;
#X obj 65 482 list;
#X obj 37 282 select 0 1;
#X obj 94 373 t l b;
#X obj 92 565 s websockets-list;
#X obj 65 620 outlet;
#X obj 65 539 t b l;
#X obj 37 22 inlet;
#X obj 135 22 inlet;
#X obj 37 73 route bang;
#X obj 65 512 list append;
#X obj 241 420 s remove_socket_from_send_buffer;
#X obj 37 134 t b b;
#X obj 37 105 t b b;
#X obj 241 380 i;
#X obj 58 162 r websockets-list;
#X text 161 69 if disconnected client is a websocket \; - remove it
from websockets list \; - remove its remaining messages from buffer
;
#X text 240 442 see 'pd send-buffer' in main object;
#X connect 0 0 6 1;
#X connect 0 0 23 1;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 2 1 7 1;
#X connect 2 1 19 1;
#X connect 3 0 9 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 5 1 4 1;
#X connect 6 0 11 0;
#X connect 7 0 8 0;
#X connect 8 1 12 0;
#X connect 9 0 3 1;
#X connect 9 1 10 1;
#X connect 10 0 19 0;
#X connect 11 0 7 0;
#X connect 11 1 10 0;
#X connect 11 1 23 0;
#X connect 12 0 2 0;
#X connect 12 1 4 0;
#X connect 15 0 14 0;
#X connect 15 1 13 0;
#X connect 16 0 18 0;
#X connect 17 0 0 1;
#X connect 18 0 22 0;
#X connect 19 0 15 0;
#X connect 21 0 1 0;
#X connect 21 1 0 0;
#X connect 21 1 3 1;
#X connect 21 1 10 1;
#X connect 22 0 21 0;
#X connect 23 0 20 0;
#X connect 24 0 1 1;
#X restore 584 343 pd remove_socket;
#X obj 584 575 outlet;
#X obj 320 249 i;
#N canvas 110 64 410 331 add_socket 0;
#X obj 36 134 list;
#X obj 36 159 list append;
#X obj 63 212 s websockets-list;
#X obj 36 20 inlet;
#X obj 36 183 t b l;
#X obj 36 282 outlet;
#X obj 36 244 i;
#X obj 57 110 r websockets-list;
#X obj 36 62 t b f;
#X text 134 20 add socket to websockets list \; (just after sending
handshake response);
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 3 0 8 0;
#X connect 4 0 6 0;
#X connect 4 1 2 0;
#X connect 6 0 5 0;
#X connect 7 0 0 1;
#X connect 8 0 0 0;
#X connect 8 1 1 1;
#X connect 8 1 6 1;
#X restore 320 286 pd add_socket;
#X obj 909 413 i;
#X obj 584 368 t b b;
#X obj 28 576 outlet;
#N canvas 79 51 928 749 websocket-data 0;
#X obj 146 17 inlet;
#X obj 841 19 inlet;
#X obj 24 704 outlet;
#X obj 24 591 i;
#X msg 24 617 list disconnectsocket \$1;
#X obj 827 703 outlet;
#X obj 827 427 i;
#X obj 434 703 outlet;
#X text 249 701 output unmasked messages;
#X text 872 703 socket;
#X obj 24 564 t b;
#N canvas 132 63 733 789 unmask-message 0;
#X obj 177 111 i;
#X obj 219 111 + 1;
#X obj 149 287 * 256;
#X obj 134 311 +;
#X obj 93 286 t f b;
#X obj 380 533 mod 4;
#X obj 380 581 route 0 1 2 3;
#X obj 380 557 pack f f;
#X obj 380 630 expr $i1^$i2;
#X obj 462 630 expr $i1^$i2;
#X obj 543 630 expr $i1^$i2;
#X obj 625 630 expr $i1^$i2;
#X obj 291 460 ==;
#X obj 134 416 route 0;
#X obj 134 443 t b b;
#X obj 380 484 unpack f f;
#X obj 291 414 t f a;
#X obj 291 484 select 1;
#X obj 192 79 0;
#X obj 380 742 outlet;
#X obj 90 18 inlet;
#X obj 93 385 - 128;
#X obj 90 79 t b f;
#X obj 72 177 pack f f;
#X obj 219 79 10;
#X obj 291 437 - 13;
#X obj 279 79 8;
#X obj 134 385 +;
#X obj 162 363 0;
#X obj 149 337 expr ($i2 << 24) + ($i1 << 16);
#X obj 72 214 route 0 1 2 3 4 5 6 7 8 9 10 11 12 13;
#X obj 18 260 route 254 255;
#X obj 380 508 - 14;
#X text 383 213 0: message type \; 1: mask present (128) + data length(<126)
\; [or extended length : 254=16bit or 255=64bit] \; 2-5: 32 higher
bits of 64bit length (unsupported) \; 6-7: bits 16 to 32 of 64bit length
\; 8-9: 16bit length (or 16 lower bits of 64bit length) \; 10-13: 32bit
mask \; 14 and more: data;
#X obj 291 512 t b b;
#X obj 246 79 - 4;
#X obj 33 151 moses 0;
#X obj 72 741 outlet;
#X connect 0 0 1 0;
#X connect 0 0 36 0;
#X connect 1 0 0 1;
#X connect 2 0 3 1;
#X connect 3 0 27 0;
#X connect 4 0 21 0;
#X connect 4 1 24 0;
#X connect 5 0 7 0;
#X connect 6 0 8 0;
#X connect 6 1 9 0;
#X connect 6 2 10 0;
#X connect 6 3 11 0;
#X connect 7 0 6 0;
#X connect 8 0 19 0;
#X connect 9 0 19 0;
#X connect 10 0 19 0;
#X connect 11 0 19 0;
#X connect 12 0 17 0;
#X connect 13 0 14 0;
#X connect 13 1 12 1;
#X connect 14 0 37 0;
#X connect 14 1 35 0;
#X connect 15 0 32 0;
#X connect 15 1 7 1;
#X connect 16 0 25 0;
#X connect 16 1 15 0;
#X connect 17 0 34 0;
#X connect 18 0 0 1;
#X connect 20 0 22 0;
#X connect 21 0 13 0;
#X connect 22 0 0 0;
#X connect 22 1 23 1;
#X connect 23 0 30 0;
#X connect 24 0 0 1;
#X connect 25 0 12 0;
#X connect 26 0 0 1;
#X connect 27 0 13 0;
#X connect 28 0 27 1;
#X connect 29 0 27 1;
#X connect 30 0 37 0;
#X connect 30 1 31 0;
#X connect 30 6 29 1;
#X connect 30 7 29 0;
#X connect 30 8 2 0;
#X connect 30 9 3 0;
#X connect 30 10 8 1;
#X connect 30 11 9 1;
#X connect 30 12 10 1;
#X connect 30 13 11 1;
#X connect 30 14 16 0;
#X connect 31 0 26 0;
#X connect 31 0 28 0;
#X connect 31 2 4 0;
#X connect 32 0 5 0;
#X connect 34 0 18 0;
#X connect 34 1 37 0;
#X connect 35 0 0 1;
#X connect 36 1 23 0;
#X restore 146 71 pd unmask-message;
#X text 68 703 to 'send-buffer';
#X obj 146 179 route bang;
#X obj 317 144 0;
#X obj 290 144 1;
#X obj 429 145 0;
#X obj 402 145 1;
#X obj 290 117 t b b;
#X obj 375 117 t b b;
#X obj 245 179 spigot 1;
#X obj 357 179 spigot 0;
#X obj 203 243 route 129 130;
#X obj 278 267 t f b;
#X obj 278 292 route 136 137 138;
#X obj 203 703 outlet;
#X obj 203 205 t f b;
#X msg 203 294 text;
#X msg 240 318 binary;
#X obj 357 218 route bang;
#X obj 414 243 list prepend;
#X obj 245 117 t f;
#X obj 414 267 t l l;
#X obj 393 292 list;
#X obj 435 218 t b;
#X obj 393 400 list prepend;
#X msg 311 318 ping;
#X msg 344 343 pong;
#X msg 278 343 close;
#X obj 146 205 t b b;
#X obj 393 423 list trim;
#X text 263 71 <-- PROCESS MESSAGES AND MASK;
#X obj 203 444 t a;
#X obj 630 525 i;
#X obj 630 502 t b;
#X obj 530 634 print websocket-server;
#X msg 630 548 <PONG> received from socket \$1;
#X obj 393 446 route close ping pong;
#X obj 503 533 i;
#X msg 530 606 <PING> received from socket \$1;
#X obj 434 500 t a b;
#X obj 434 606 list prepend;
#X msg 503 581 send \$1 pong;
#X obj 503 557 t f f;
#X obj 842 373 t f;
#X text 481 702 pong response (with ping content);
#X text 115 314 websocket \; message types;
#X text 420 174 dispatch messages byteflow : \; - straight to outlet
for text/binary \; - concat to list for websocket server messages;
#X connect 0 0 11 0;
#X connect 1 0 54 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 6 0 5 0;
#X connect 10 0 3 0;
#X connect 11 0 13 0;
#X connect 11 1 31 0;
#X connect 13 0 39 0;
#X connect 13 1 26 0;
#X connect 14 0 20 1;
#X connect 15 0 20 1;
#X connect 16 0 21 1;
#X connect 17 0 21 1;
#X connect 18 0 15 0;
#X connect 18 1 16 0;
#X connect 19 0 14 0;
#X connect 19 1 17 0;
#X connect 20 0 42 0;
#X connect 21 0 29 0;
#X connect 22 0 27 0;
#X connect 22 1 28 0;
#X connect 22 2 23 0;
#X connect 23 0 24 0;
#X connect 23 1 19 0;
#X connect 23 1 34 0;
#X connect 23 1 35 1;
#X connect 24 0 38 0;
#X connect 24 1 36 0;
#X connect 24 2 37 0;
#X connect 26 0 22 0;
#X connect 26 1 18 0;
#X connect 26 1 6 0;
#X connect 27 0 42 0;
#X connect 28 0 42 0;
#X connect 29 0 33 0;
#X connect 29 1 30 0;
#X connect 30 0 32 0;
#X connect 31 0 20 0;
#X connect 31 0 21 0;
#X connect 32 0 33 1;
#X connect 32 1 30 1;
#X connect 33 0 35 0;
#X connect 34 0 30 1;
#X connect 34 0 33 1;
#X connect 35 0 40 0;
#X connect 36 0 35 1;
#X connect 37 0 35 1;
#X connect 38 0 35 1;
#X connect 39 1 20 0;
#X connect 39 1 21 0;
#X connect 40 0 47 0;
#X connect 42 0 25 0;
#X connect 43 0 46 0;
#X connect 44 0 43 0;
#X connect 46 0 45 0;
#X connect 47 0 10 0;
#X connect 47 1 50 0;
#X connect 47 2 44 0;
#X connect 48 0 53 0;
#X connect 49 0 45 0;
#X connect 50 0 51 0;
#X connect 50 1 48 0;
#X connect 51 0 7 0;
#X connect 52 0 51 1;
#X connect 53 0 52 0;
#X connect 53 1 49 0;
#X connect 54 0 43 1;
#X connect 54 0 3 1;
#X connect 54 0 48 1;
#X connect 54 0 6 1;
#X restore 265 418 pd websocket-data;
#X obj 320 212 t b l;
#X obj 28 22 inlet;
#X obj 1090 572 outlet;
#X text 440 179 WEBSOCKET HANDSHAKE \; <-- & WEB SERVER;
#X text 383 413 <-- PROCESS \; INCOMING MESSAGES;
#X text 138 185 <-- PROCESS \; OUTGOING MESSAGES;
#X text 340 575 <- output decoded messages;
#X obj 1033 237 route bang;
#X obj 28 92 list trim;
#X obj 28 131 route broadcast send webpage;
#X text 68 20 websocket messages to send \; (and optional webpage)
;
#X obj 584 467 i;
#X obj 599 433 list length;
#X obj 599 407 r websockets-list;
#X obj 938 50 inlet;
#N canvas 86 51 754 610 send-buffer 0;
#X obj 32 18 inlet;
#X obj 273 569 outlet;
#X obj 550 123 r tosendbuffer;
#X obj 32 150 t l b b;
#X obj 51 199 list;
#X obj 32 100 list length;
#X obj 32 125 list append;
#X obj 32 227 list prepend;
#X obj 32 252 s tosendbuffer;
#X obj 216 313 list;
#X obj 216 339 route bang;
#X obj 273 372 list split 1;
#X obj 273 454 list split;
#X obj 273 427 list;
#X obj 273 402 t b f;
#X obj 301 479 s tosendbuffer;
#X obj 216 263 t b b;
#X obj 273 505 list trim;
#X obj 550 195 value bufferlength;
#X obj 550 156 list length;
#X obj 32 76 t l l;
#N canvas 397 50 440 761 remove_socket_from_send_buffer 0;
#X obj 47 142 list;
#X obj 47 169 route bang;
#X obj 123 219 list split 1;
#X obj 123 300 list split;
#X obj 123 274 list;
#X obj 123 249 t b f f;
#X obj 123 455 list;
#X obj 123 326 t l l;
#X obj 150 504 list;
#X obj 123 352 list split 2;
#X msg 123 376 \$2;
#X obj 123 404 ==;
#X obj 47 69 t b b f;
#X obj 150 585 t l l;
#X obj 150 558 list prepend;
#X obj 104 611 list;
#X obj 123 430 t b f;
#X obj 150 530 list prepend;
#X obj 104 194 t b l b;
#X obj 150 478 select 0;
#X obj 104 676 s tosendbuffer;
#X obj 156 642 route bang;
#X obj 68 118 r tosendbuffer;
#X obj 47 28 inlet;
#X connect 0 0 1 0;
#X connect 1 1 18 0;
#X connect 2 0 5 0;
#X connect 2 1 4 1;
#X connect 3 0 7 0;
#X connect 3 1 6 1;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 5 1 3 1;
#X connect 5 2 17 1;
#X connect 6 0 2 0;
#X connect 7 0 9 0;
#X connect 7 1 8 1;
#X connect 8 0 17 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 16 0;
#X connect 12 0 0 0;
#X connect 12 2 11 1;
#X connect 13 0 15 1;
#X connect 13 1 14 1;
#X connect 14 0 13 0;
#X connect 15 0 20 0;
#X connect 16 0 6 0;
#X connect 16 1 19 0;
#X connect 17 0 14 0;
#X connect 18 0 15 0;
#X connect 18 1 2 0;
#X connect 18 2 14 1;
#X connect 19 0 8 0;
#X connect 22 0 0 1;
#X connect 23 0 12 0;
#X restore 413 338 pd remove_socket_from_send_buffer;
#X obj 216 48 loadbang;
#X obj 72 175 r tosendbuffer;
#X obj 237 289 r tosendbuffer;
#X obj 413 294 r remove_socket_from_send_buffer;
#X text 80 76 add to buffer;
#X text 422 315 remove remaining messages from disconnected client
;
#X obj 216 237 metro 10;
#X obj 261 111 select 0 1;
#X obj 261 144 10;
#X obj 289 144 1;
#X obj 344 111 abs;
#X obj 344 135 int;
#X text 525 32 'SEND BUFFER' (AND RELATED);
#X obj 261 188 i;
#X obj 343 157 t b f;
#X obj 261 212 +;
#X obj 261 82 r iemnet;
#X obj 344 82 r add_sending_delay;
#X text 274 237 <- OUTGOING MESSAGES;
#X text 129 134 default values for \; mrpeach and iemnet ->;
#X connect 0 0 20 0;
#X connect 2 0 19 0;
#X connect 3 0 7 0;
#X connect 3 1 4 0;
#X connect 4 0 7 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 8 0;
#X connect 9 0 10 0;
#X connect 10 1 11 0;
#X connect 11 0 14 0;
#X connect 11 1 13 1;
#X connect 12 0 17 0;
#X connect 12 1 15 0;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X connect 14 1 12 1;
#X connect 16 0 9 0;
#X connect 17 0 1 0;
#X connect 19 0 18 0;
#X connect 20 0 5 0;
#X connect 20 1 6 1;
#X connect 22 0 28 0;
#X connect 23 0 4 1;
#X connect 24 0 9 1;
#X connect 25 0 21 0;
#X connect 28 0 16 0;
#X connect 29 0 30 0;
#X connect 29 1 31 0;
#X connect 30 0 35 0;
#X connect 31 0 35 0;
#X connect 32 0 33 0;
#X connect 33 0 36 0;
#X connect 35 0 37 0;
#X connect 36 0 35 0;
#X connect 36 1 37 1;
#X connect 37 0 28 1;
#X connect 38 0 29 0;
#X connect 39 0 32 0;
#X restore 28 500 pd send-buffer;
#X text 124 501 <-- 'SEND' BUFFER;
#N canvas 79 58 1009 942 websocket-http 0;
#N canvas 133 64 582 593 websocketresponsekey 0;
#N canvas 174 50 827 973 sha1-processchunk 0;
#X obj 555 489 unpack f f f f;
#N canvas 603 716 387 175 sha1-add 0;
#X obj 21 86 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 48 inlet;
#X obj 21 48 inlet;
#X obj 114 48 inlet;
#X obj 207 48 inlet;
#X obj 21 137 outlet;
#X obj 300 136 outlet;
#X text 93 10 pseudo 32 bits add function;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 609 522 pd sha1-add;
#X text 190 447 a left-rotate 5;
#X obj 42 464 expr ((registers[0] << 5) % 65536) ^ (registers[1] >>
11) \; ((registers[1] << 5) % 65536) ^ (registers[0] >> 11);
#X obj 422 463 expr registers[8] \; registers[9 ];
#X obj 521 400 t b b f f;
#N canvas 608 713 387 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 555 549 pd sha1-add;
#N canvas 603 699 393 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 42 655 pd sha1-add;
#N canvas 605 700 390 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 422 594 pd sha1-add;
#X obj 42 886 pack f f f f f f f f f f;
#X msg 42 915 \; registers 0 \$1 \$2 \$3 \$4 \$5 \$6 \$7 \$8 \$9 \$10
;
#X obj 42 689 t f b;
#X obj 78 712 expr registers[0] \; registers[1] \; ((registers[2] >>
2)) ^ ((registers[3] << 14) % 65536) \; ((registers[3] >> 2)) ^ ((registers[2]
<< 14) % 65536) \; registers[4] \; registers[5] \; registers[6] \;
registers[7];
#N canvas 76 50 1359 582 sha1-computefk 0;
#X obj 29 72 moses 20;
#X obj 381 132 moses 40;
#X obj 696 197 moses 60;
#X obj 29 273 expr (registers[2] & registers[4]) ^ ( (~registers[2])
& registers[6]) \; (registers[3] & registers[5]) ^ ( (~registers[3])
& registers[7]);
#X obj 381 342 pack;
#X obj 381 273 expr registers[2] ^ registers[4] ^ registers[6] \; registers[3]
^ registers[5] ^ registers[7];
#X obj 696 340 pack;
#X obj 696 273 expr (registers[2] & registers[4]) ^ (registers[2] &
registers[6]) ^ (registers[4] & registers[6]) \; (registers[3] & registers[5])
^ (registers[3] & registers[7]) ^ (registers[5] & registers[7]);
#X obj 29 342 pack;
#X msg 29 376 \$1 \$2 23170 31129;
#X obj 1036 340 pack;
#X obj 1036 273 expr registers[2] ^ registers[4] ^ registers[6] \;
registers[3] ^ registers[5] ^ registers[7];
#X msg 381 375 \$1 \$2 28377 60321;
#X msg 696 373 \$1 \$2 36635 48348;
#X msg 1036 373 \$1 \$2 51810 49622;
#X obj 29 21 inlet;
#X text 79 20 counter value;
#X text 44 246 0 <= i <= 19 -> (b and c) xor ((not b) and d);
#X text 394 248 20 <= i <= 39 -> b xor c xor d;
#X text 1046 248 60 <= i <= 79 -> b xor c xor d;
#X text 707 249 40 <= i <= 59 (b and c) xor (b and d) xor (c and d)
;
#X text 151 375 k = 0x5A827999;
#X text 505 374 k = 0x6ED9EBA1;
#X text 819 372 k = 0x8F1BBCDC;
#X text 1157 373 k = 0xCA62C1D6;
#X obj 29 536 outlet;
#X text 89 534 output : f and k;
#X connect 0 0 3 0;
#X connect 0 1 1 0;
#X connect 1 0 5 0;
#X connect 1 1 2 0;
#X connect 2 0 7 0;
#X connect 2 1 11 0;
#X connect 3 0 8 0;
#X connect 3 1 8 1;
#X connect 4 0 12 0;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X connect 6 0 13 0;
#X connect 7 0 6 0;
#X connect 7 1 6 1;
#X connect 8 0 9 0;
#X connect 9 0 25 0;
#X connect 10 0 14 0;
#X connect 11 0 10 0;
#X connect 11 1 10 1;
#X connect 12 0 25 0;
#X connect 13 0 25 0;
#X connect 14 0 25 0;
#X connect 15 0 0 0;
#X restore 555 463 pd sha1-computefk;
#N canvas 242 50 668 385 sha1-computew 0;
#X obj 27 18 inlet;
#X obj 286 132 expr chunk[($i1*2)-6] ^ chunk[($i1*2)-16] ^ chunk[($i1*2)-28]
^ chunk[($i1*2)-32] \; chunk[($i1*2)-5] ^ chunk[($i1*2)-15] ^ chunk[($i1*2)-27]
^ chunk[($i1*2)-31];
#X obj 258 102 t f f;
#X obj 286 203 expr (($i1 << 1) % 65536) ^ ($i2 >> 15) \; (($i2 <<
1) % 65536) ^ ($i1 >> 15);
#X obj 27 67 moses 16;
#X obj 27 135 expr chunk[($i1*2)] \; chunk[($i1*2)+1];
#X obj 258 272 pack f f f;
#X obj 258 241 * 2;
#X obj 27 350 outlet;
#X obj 259 349 outlet;
#X obj 258 299 s chunk;
#X text 317 101 generate words for 16 <= i <= 79;
#X text 158 134 input word;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 1 1 3 1;
#X connect 2 0 7 0;
#X connect 2 1 1 0;
#X connect 3 0 6 1;
#X connect 3 0 8 0;
#X connect 3 1 6 2;
#X connect 3 1 9 0;
#X connect 4 0 5 0;
#X connect 4 1 2 0;
#X connect 5 0 8 0;
#X connect 5 1 9 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X restore 680 462 pd sha1-computew;
#X obj 521 338 until;
#X obj 551 364 + 1;
#X obj 521 364 i;
#X msg 554 315 0;
#X obj 521 289 t b b;
#X msg 521 315 80;
#X obj 275 13 inlet;
#X obj 553 150 until;
#X obj 583 176 + 1;
#X msg 553 127 10;
#X obj 553 176 i;
#X obj 553 255 tabwrite registers;
#X obj 553 202 t f f;
#X obj 553 102 t f b;
#X msg 596 150 0;
#X obj 275 53 t b b b;
#X obj 37 165 i;
#X msg 70 118 0;
#X obj 37 92 t b b;
#X obj 391 278 tabread registers;
#X msg 37 118 5;
#X obj 279 278 tabread registers;
#N canvas 707 678 374 175 sha1-add 0;
#X obj 21 56 expr (($i1+$i3) + (($i2+$i4) / 65536)) % 65536 \; ($i2
+ $i4) % 65536;
#X obj 300 18 inlet;
#X obj 21 18 inlet;
#X obj 114 18 inlet;
#X obj 207 18 inlet;
#X obj 21 107 outlet;
#X obj 300 106 outlet;
#X connect 0 0 5 0;
#X connect 0 1 6 0;
#X connect 1 0 0 3;
#X connect 2 0 0 0;
#X connect 3 0 0 1;
#X connect 4 0 0 2;
#X restore 194 312 pd sha1-add;
#X obj 67 165 + 2;
#X obj 173 254 + 1;
#X obj 391 255 + 1;
#X msg 166 385 \$1 \$2 \$3;
#X obj 166 359 pack f f f;
#X obj 166 334 i;
#X obj 37 188 t f f;
#X obj 37 141 until;
#X obj 37 212 t b f f f f f;
#X obj 166 411 s sha1hash;
#X obj 67 278 tabread sha1hash;
#X obj 173 278 tabread sha1hash;
#X obj 553 228 tabread sha1hash;
#X text 593 101 initialize registers for new chunk \; hash[] -> registers[]
;
#X text 79 91 update hash table for this chunck;
#X text 569 289 main loop processing chunk;
#X text 426 712 b = a \; \; c = b rightrotate 2 \; \; d = c \; \; e
= d;
#X text 48 445 a =;
#X text 452 447 + e;
#X text 561 445 + f + k;
#X text 700 444 + word;
#X text 278 312 hash[] += registers[];
#X text 405 28 SHA1 : all 32 bit numbers are treated as 16 bit pairs
\; (see Wikipedia for pseudo-code);
#X connect 0 0 6 0;
#X connect 0 1 6 1;
#X connect 0 2 1 0;
#X connect 0 3 1 1;
#X connect 1 0 6 2;
#X connect 1 1 6 3;
#X connect 3 0 7 0;
#X connect 3 1 7 1;
#X connect 4 0 8 0;
#X connect 4 1 8 1;
#X connect 5 0 3 0;
#X connect 5 1 4 0;
#X connect 5 2 13 0;
#X connect 5 3 14 0;
#X connect 6 0 8 2;
#X connect 6 1 8 3;
#X connect 7 0 11 0;
#X connect 7 1 9 1;
#X connect 8 0 7 2;
#X connect 8 1 7 3;
#X connect 9 0 10 0;
#X connect 11 0 9 0;
#X connect 11 1 12 0;
#X connect 12 0 9 2;
#X connect 12 1 9 3;
#X connect 12 2 9 4;
#X connect 12 3 9 5;
#X connect 12 4 9 6;
#X connect 12 5 9 7;
#X connect 12 6 9 8;
#X connect 12 7 9 9;
#X connect 13 0 0 0;
#X connect 14 0 1 2;
#X connect 14 1 1 3;
#X connect 15 0 17 0;
#X connect 16 0 17 1;
#X connect 17 0 16 0;
#X connect 17 0 5 0;
#X connect 18 0 17 1;
#X connect 19 0 20 0;
#X connect 19 1 18 0;
#X connect 20 0 15 0;
#X connect 21 0 30 0;
#X connect 22 0 25 0;
#X connect 23 0 25 1;
#X connect 24 0 22 0;
#X connect 25 0 23 0;
#X connect 25 0 27 0;
#X connect 27 0 50 0;
#X connect 27 1 26 1;
#X connect 28 0 24 0;
#X connect 28 1 29 0;
#X connect 29 0 25 1;
#X connect 30 0 33 0;
#X connect 30 1 19 0;
#X connect 30 2 28 0;
#X connect 31 0 44 0;
#X connect 32 0 31 1;
#X connect 33 0 35 0;
#X connect 33 1 32 0;
#X connect 34 0 37 3;
#X connect 35 0 45 0;
#X connect 36 0 37 2;
#X connect 37 0 42 1;
#X connect 37 1 42 2;
#X connect 38 0 31 1;
#X connect 39 0 49 0;
#X connect 40 0 34 0;
#X connect 41 0 47 0;
#X connect 42 0 41 0;
#X connect 43 0 42 0;
#X connect 44 0 46 0;
#X connect 44 1 38 0;
#X connect 45 0 31 0;
#X connect 46 0 43 0;
#X connect 46 1 43 1;
#X connect 46 2 48 0;
#X connect 46 3 39 0;
#X connect 46 4 36 0;
#X connect 46 5 40 0;
#X connect 48 0 37 0;
#X connect 49 0 37 1;
#X connect 50 0 26 0;
#X restore 86 376 pd sha1-processchunk;
#N canvas 185 97 444 496 sha1-flushwebsocketkey 0;
#X obj 81 235 t b f;
#X obj 81 210 list split 2;
#X obj 150 235 * 256;
#X obj 108 261 +;
#X obj 108 412 list prepend 0;
#X obj 108 438 s chunk;
#X obj 108 344 t b l;
#X obj 108 287 list prepend;
#X obj 108 314 list split 30;
#X obj 108 388 list append 32768 0;
#X obj 53 19 inlet;
#N canvas 227 128 402 294 sha1-clearchunk 0;
#X obj 54 121 until;
#X obj 84 147 + 1;
#X obj 54 147 i;
#X msg 97 121 0;
#X obj 54 26 inlet;
#X msg 54 98 160;
#X obj 54 174 t b f;
#X obj 54 200 0;
#X obj 54 228 tabwrite chunk;
#X obj 54 73 t b b;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 6 0;
#X connect 3 0 2 1;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 6 1 8 1;
#X connect 7 0 8 0;
#X connect 9 0 5 0;
#X connect 9 1 3 0;
#X restore 194 184 pd sha1-clearchunk;
#X obj 81 144 t f b;
#X text 196 210 <- convert stream to words (2x16bit);
#X text 197 286 <- get 15 words \; for fixed length (60 bytes) \; websocket
key + magic string;
#X text 233 388 <- append bit 1 to message \; specific fixed position
\; for 60 bytes string \;;
#X obj 180 260 loadbang;
#X obj 81 184 list append;
#X obj 24 90 list append;
#X obj 53 65 list split 1;
#X obj 54 114 t b f;
#X connect 0 0 17 1;
#X connect 0 1 3 0;
#X connect 1 0 0 0;
#X connect 1 2 2 0;
#X connect 1 2 17 1;
#X connect 2 0 3 1;
#X connect 3 0 7 0;
#X connect 4 0 5 0;
#X connect 6 0 7 1;
#X connect 6 1 9 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 8 2 7 1;
#X connect 9 0 4 0;
#X connect 10 0 19 0;
#X connect 12 0 17 0;
#X connect 12 1 11 0;
#X connect 16 0 7 1;
#X connect 16 0 17 1;
#X connect 17 0 1 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 19 1 18 1;
#X connect 20 0 18 0;
#X connect 20 1 12 0;
#X restore 140 255 pd sha1-flushwebsocketkey;
#N canvas 186 95 419 287 sha1-paddingchunk 0;
#N canvas 240 134 413 283 sha1-clearchunk 0;
#X obj 49 120 until;
#X obj 79 146 + 1;
#X obj 49 146 i;
#X msg 92 120 0;
#X obj 49 27 inlet;
#X msg 49 97 160;
#X obj 49 173 t b f;
#X obj 49 199 0;
#X obj 49 227 tabwrite chunk;
#X obj 49 72 t b b;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 1 0;
#X connect 2 0 6 0;
#X connect 3 0 2 1;
#X connect 4 0 9 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 6 1 8 1;
#X connect 7 0 8 0;
#X connect 9 0 5 0;
#X connect 9 1 3 0;
#X restore 70 125 pd sha1-clearchunk;
#X msg 43 185 31 480;
#X obj 43 28 inlet;
#X obj 43 72 t b b;
#X obj 43 214 s chunk;
#X text 188 121 one more zero padding chunk \; is needed to put the
64 bits \; final string for sha1 input;
#X text 89 184 <-length of original message is coded here;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 0 0;
#X restore 70 417 pd sha1-paddingchunk;
#N canvas 187 96 427 369 flushsha1hash 0;
#X obj 58 172 tabread sha1hash;
#X obj 58 199 expr $i1 % 256 \; $i1 / 256;
#X obj 58 241 list prepend;
#X obj 58 268 list split 20;
#X obj 58 120 until;
#X obj 88 146 + 1;
#X obj 58 146 i;
#X msg 101 120 0;
#X msg 58 97 10;
#X obj 58 72 t b b b;
#X obj 58 24 inlet;
#X obj 58 317 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 0;
#X connect 2 0 3 0;
#X connect 3 0 11 0;
#X connect 3 2 2 1;
#X connect 4 0 6 0;
#X connect 5 0 6 1;
#X connect 6 0 5 0;
#X connect 6 0 0 0;
#X connect 7 0 6 1;
#X connect 8 0 4 0;
#X connect 9 0 8 0;
#X connect 9 1 7 0;
#X connect 9 2 2 1;
#X connect 10 0 9 0;
#X restore 39 469 pd flushsha1hash;
#N canvas 190 87 613 658 base64encoder 0;
#X obj 134 117 list append;
#X obj 157 92 list split 3;
#X obj 157 143 t b l;
#X obj 40 233 list;
#X obj 235 258 list;
#X obj 55 117 list length;
#X obj 40 167 i;
#X obj 337 257 unpack f f f;
#X obj 337 286 expr $i3 % 64 \; (($i2 % 16) * 4) + ($i3 >> 6) \; (($i1
% 4) * 16) + ($i2 >> 4) \; $i1 >> 2;
#X obj 55 142 % 3;
#X obj 279 377 moses 26;
#X obj 324 404 moses 52;
#X obj 279 404 + 65;
#X obj 324 430 + 71;
#X obj 456 456 - 4;
#X obj 369 456 43;
#X obj 398 456 47;
#X obj 40 258 unpack f f;
#X obj 369 430 select 62 63 64;
#X obj 235 286 expr 64 \; 64 \; ($i1 % 4) * 16 \; $i1 >> 2;
#X obj 40 286 expr 64 \; ($i2 % 16) * 4 \; (($i1 % 4) * 16) + ($i2
>> 4) \; $i1 >> 2;
#X obj 427 456 61;
#X obj 369 493 list prepend;
#X obj 369 519 t l l;
#X obj 25 56 t b b l l b;
#X obj 26 575 list;
#X obj 26 619 outlet;
#X obj 25 14 inlet;
#X text 83 13 encodes any list of bytes in base64;
#X text 341 376 A -> Z;
#X text 388 402 a -> z;
#X text 472 430 + / = and 0 -> 9;
#X text 247 92 convert 3 bytes to 4 x 6 bits;
#X text 422 255 4 x 6 bits;
#X text 268 252 2 x 6 bits \; add ==;
#X text 115 250 3 x 6 bits \; add =;
#X text 107 196 remaining bytes (< 3);
#X obj 40 196 select 2 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 0 1;
#X connect 1 1 3 1;
#X connect 1 1 4 1;
#X connect 2 0 0 0;
#X connect 2 1 7 0;
#X connect 3 0 17 0;
#X connect 4 0 19 0;
#X connect 5 0 9 0;
#X connect 6 0 37 0;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 7 2 8 2;
#X connect 8 0 10 0;
#X connect 8 1 10 0;
#X connect 8 2 10 0;
#X connect 8 3 10 0;
#X connect 9 0 6 1;
#X connect 10 0 12 0;
#X connect 10 1 11 0;
#X connect 11 0 13 0;
#X connect 11 1 18 0;
#X connect 12 0 22 0;
#X connect 13 0 22 0;
#X connect 14 0 22 0;
#X connect 15 0 22 0;
#X connect 16 0 22 0;
#X connect 17 0 20 0;
#X connect 17 1 20 1;
#X connect 18 0 15 0;
#X connect 18 1 16 0;
#X connect 18 2 21 0;
#X connect 18 3 14 0;
#X connect 19 0 10 0;
#X connect 19 1 10 0;
#X connect 19 2 10 0;
#X connect 19 3 10 0;
#X connect 20 0 10 0;
#X connect 20 1 10 0;
#X connect 20 2 10 0;
#X connect 20 3 10 0;
#X connect 21 0 22 0;
#X connect 22 0 23 0;
#X connect 23 0 25 1;
#X connect 23 1 22 1;
#X connect 24 0 25 0;
#X connect 24 1 6 0;
#X connect 24 2 1 0;
#X connect 24 3 5 0;
#X connect 24 4 22 1;
#X connect 25 0 26 0;
#X connect 27 0 24 0;
#X connect 37 0 3 0;
#X connect 37 1 4 0;
#X restore 39 501 pd base64encoder;
#X msg 139 308 \; sha1hash 0 26437 8961 61389 43913 39098 56574 4146
21622 50130 57840;
#X obj 39 216 t b l;
#X obj 39 254 t b b b b b;
#X obj 39 21 inlet;
#X obj 39 552 outlet;
#X obj 39 152 list append 50 53 56 69 65 70 65 53 45 69 57 49 52 45
52 55 68 65 45 57 53 67 65 45 67 53 65 66 48 68 67 56 53 66 49 49;
#X obj 39 90 list split 24;
#X text 150 130 add websocket magic string;
#X text 222 376 <-- SHA1 MAIN LOOP;
#X text 153 501 <- BASE64 ENCODE;
#X obj 151 75 table chunk 160;
#X obj 151 50 table sha1hash 10;
#X obj 151 23 table registers 10;
#X text 275 22 a (0+1) \, b (2+3) \, c (4+5) \, d (6+7) \, e (8+9)
;
#X text 155 289 initialize variables;
#X connect 3 0 4 0;
#X connect 4 0 9 0;
#X connect 6 0 7 0;
#X connect 6 1 1 0;
#X connect 7 0 3 0;
#X connect 7 1 0 0;
#X connect 7 2 2 0;
#X connect 7 3 0 0;
#X connect 7 4 5 0;
#X connect 8 0 11 0;
#X connect 10 0 6 0;
#X connect 11 0 10 0;
#X restore 104 406 pd websocketresponsekey;
#X obj 104 459 list prepend 83 101 99 45 87 101 98 83 111 99 107 101
116 45 65 99 99 101 112 116 58 32;
#X obj 104 516 list append 13 10;
#X obj 28 21 inlet;
#X obj 166 78 loadbang;
#X obj 104 900 outlet;
#X text 220 515 '<cr><lf>';
#N canvas 139 58 500 743 routelist 0;
#X obj 313 411 list;
#X obj 313 440 list split 1;
#X obj 317 187 list length;
#X obj 176 327 until;
#X obj 176 300 i;
#X obj 59 409 list;
#X obj 59 437 list split 1;
#X obj 176 356 t b b;
#X obj 181 500 ==;
#X obj 181 530 route 0;
#X obj 181 557 t b b;
#X obj 290 152 t l l;
#X obj 111 214 <;
#X obj 111 241 route 1;
#X obj 37 185 list length;
#X obj 336 641 list;
#X obj 63 612 list;
#X obj 149 272 t b b;
#X obj 290 129 list;
#X obj 231 557 t b;
#X obj 61 646 spigot;
#X msg 108 618 1;
#X msg 143 629 0;
#X obj 37 68 t l l b b;
#X obj 61 692 outlet;
#X obj 336 692 outlet;
#X obj 37 20 inlet;
#X obj 311 20 inlet;
#X text 79 668 matching : return rest of line;
#X text 347 664 not found : pass line;
#X text 147 43 compare ascii strings \; (could be better..);
#X connect 0 0 1 0;
#X connect 1 0 8 1;
#X connect 1 1 0 1;
#X connect 2 0 4 1;
#X connect 2 0 12 1;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X connect 6 1 5 1;
#X connect 6 1 16 1;
#X connect 7 0 5 0;
#X connect 7 1 0 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 19 0;
#X connect 10 0 15 0;
#X connect 10 0 22 0;
#X connect 10 1 3 1;
#X connect 11 0 0 1;
#X connect 11 1 2 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 13 1 17 0;
#X connect 14 0 12 0;
#X connect 15 0 25 0;
#X connect 16 0 20 0;
#X connect 17 0 16 0;
#X connect 17 1 4 0;
#X connect 18 0 11 0;
#X connect 20 0 24 0;
#X connect 21 0 20 1;
#X connect 22 0 20 1;
#X connect 23 0 14 0;
#X connect 23 1 15 1;
#X connect 23 1 5 1;
#X connect 23 2 18 0;
#X connect 23 3 21 0;
#X connect 26 0 23 0;
#X connect 27 0 18 1;
#X restore 97 161 pd routelist;
#X text 148 489 'Sec-WebSocket-Accept: ' + processed key;
#X obj 798 23 inlet;
#X msg 173 800 send \$1;
#X obj 104 832 list prepend;
#X obj 425 899 outlet;
#X text 190 652 'HTTP/1.1 101 Web Socket Protocol Handshake' \; 'Upgrade:
websocket' \; 'Connection: Upgrade';
#N canvas 142 56 496 749 routelist 0;
#X obj 313 411 list;
#X obj 313 442 list split 1;
#X obj 317 187 list length;
#X obj 176 327 until;
#X obj 176 300 i;
#X obj 59 409 list;
#X obj 59 437 list split 1;
#X obj 176 356 t b b;
#X obj 181 500 ==;
#X obj 181 530 route 0;
#X obj 181 557 t b b;
#X obj 290 152 t l l;
#X obj 111 214 <;
#X obj 111 241 route 1;
#X obj 37 185 list length;
#X obj 327 641 list;
#X obj 63 612 list;
#X obj 149 272 t b b;
#X obj 290 129 list;
#X obj 231 557 t b;
#X obj 61 646 spigot;
#X msg 108 618 1;
#X msg 143 629 0;
#X obj 37 68 t l l b b;
#X obj 61 692 outlet;
#X obj 327 692 outlet;
#X obj 37 20 inlet;
#X obj 311 20 inlet;
#X text 73 669 matching : return rest of line;
#X text 341 665 not found : pass line;
#X text 135 33 compare ascii strings \; (could be better..);
#X connect 0 0 1 0;
#X connect 1 0 8 1;
#X connect 1 1 0 1;
#X connect 2 0 4 1;
#X connect 2 0 12 1;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X connect 6 1 5 1;
#X connect 6 1 16 1;
#X connect 7 0 5 0;
#X connect 7 1 0 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 9 1 19 0;
#X connect 10 0 15 0;
#X connect 10 0 22 0;
#X connect 10 1 3 1;
#X connect 11 0 0 1;
#X connect 11 1 2 0;
#X connect 12 0 13 0;
#X connect 13 0 15 0;
#X connect 13 1 17 0;
#X connect 14 0 12 0;
#X connect 15 0 25 0;
#X connect 16 0 20 0;
#X connect 17 0 16 0;
#X connect 17 1 4 0;
#X connect 18 0 11 0;
#X connect 20 0 24 0;
#X connect 21 0 20 1;
#X connect 22 0 20 1;
#X connect 23 0 14 0;
#X connect 23 1 15 1;
#X connect 23 1 5 1;
#X connect 23 2 18 0;
#X connect 23 3 21 0;
#X connect 26 0 23 0;
#X connect 27 0 18 1;
#X restore 777 276 pd routelist;
#X msg 846 248 71 69 84 32 47;
#X text 269 99 intercept "Sec-WebSocket-Key: " line;
#X obj 756 357 list;
#X msg 166 119 83 101 99 45 87 101 98 83 111 99 107 101 116 45 75 101
121 58 32;
#N canvas 138 54 699 761 webserver 0;
#X obj 83 -415 t b;
#X obj 83 -445 route 32;
#X obj 26 -533 inlet;
#X obj 26 -479 route bang;
#X obj 128 192 outlet;
#X obj 128 -415 t b;
#X obj 316 -193 int;
#X obj 316 -216 / 10;
#X obj 316 -170 select 0;
#X obj 361 -146 t f b;
#X obj 316 -263 t f b;
#X obj 404 -216 % 10;
#X obj 316 -240 t f f;
#X obj 404 -192 + 48;
#X obj 404 -146 t l l;
#X obj 316 -116 list;
#X obj 404 -170 list append;
#X obj 316 -86 list prepend 67 111 110 116 101 110 116 45 76 101 110
103 116 104 58 32;
#X obj 316 -46 list append 13 10 13 10;
#X obj 247 -11 list prepend;
#X obj 247 -316 t l l;
#X obj 316 -288 list length;
#X obj 247 -361 list;
#X obj 268 -531 inlet;
#N canvas 185 97 495 692 favicon 0;
#X msg 44 98 72 84 84 80 47 49 46 48 32 50 48 48 32 79 75 13 10 67
111 110 110 101 99 116 105 111 110 58 32 75 101 101 112 45 65 108 105
118 101 13 10 67 111 110 116 101 110 116 45 76 101 110 103 116 104
58 32 49 52 54 54 13 10 67 111 110 116 101 110 116 45 84 121 112 101
58 32 105 109 97 103 101 47 112 110 103 13 10 13 10 0 0 1 0 1 0 48
48 0 0 1 0 8 0 164 5 0 0 22 0 0 0 137 80 78 71 13 10 26 10 0 0 0 13
73 72 68 82 0 0 0 48 0 0 0 48 8 3 0 0 0 96 220 9 181 0 0 3 0 80 76
84 69 215 215 215 243 243 243 229 229 229 106 107 106 130 131 130 26
35 30 189 189 189 77 79 78 161 161 161 0 203 89 0 239 97 0 158 68 0
102 36 249 249 249 236 236 236 255 255 255 16 16 16 17 17 17 18 18
18 19 19 19 20 20 20 21 21 21 22 22 22 23 23 23 24 24 24 25 25 25 26
26 26 27 27 27 28 28 28 29 29 29 30 30 30 31 31 31 32 32 32 33 33 33
34 34 34 35 35 35 36 36 36 37 37 37 38 38 38 39 39 39 40 40 40 41 41
41 42 42 42 43 43 43 44 44 44 45 45 45 46 46 46 47 47 47 48 48 48 49
49 49 50 50 50 51 51 51 52 52 52 53 53 53 54 54 54 55 55 55 56 56 56
57 57 57 58 58 58 59 59 59 60 60 60 61 61 61 62 62 62 63 63 63 64 64
64 65 65 65 66 66 66 67 67 67 68 68 68 69 69 69 70 70 70 71 71 71 72
72 72 73 73 73 74 74 74 75 75 75 76 76 76 77 77 77 78 78 78 79 79 79
80 80 80 81 81 81 82 82 82 83 83 83 84 84 84 85 85 85 86 86 86 87 87
87 88 88 88 89 89 89 90 90 90 91 91 91 92 92 92 93 93 93 94 94 94 95
95 95 96 96 96 97 97 97 98 98 98 99 99 99 100 100 100 101 101 101 102
102 102 103 103 103 104 104 104 105 105 105 106 106 106 107 107 107
108 108 108 109 109 109 110 110 110 111 111 111 112 112 112 113 113
113 114 114 114 115 115 115 116 116 116 117 117 117 118 118 118 119
119 119 120 120 120 121 121 121 122 122 122 123 123 123 124 124 124
125 125 125 126 126 126 127 127 127 128 128 128 129 129 129 130 130
130 131 131 131 132 132 132 133 133 133 134 134 134 135 135 135 136
136 136 137 137 137 138 138 138 139 139 139 140 140 140 141 141 141
142 142 142 143 143 143 144 144 144 145 145 145 146 146 146 147 147
147 148 148 148 149 149 149 150 150 150 151 151 151 152 152 152 153
153 153 154 154 154 155 155 155 156 156 156 157 157 157 158 158 158
159 159 159 160 160 160 161 161 161 162 162 162 163 163 163 164 164
164 165 165 165 166 166 166 167 167 167 168 168 168 169 169 169 170
170 170 171 171 171 172 172 172 173 173 173 174 174 174 175 175 175
176 176 176 177 177 177 178 178 178 179 179 179 180 180 180 181 181
181 182 182 182 183 183 183 184 184 184 185 185 185 186 186 186 187
187 187 188 188 188 189 189 189 190 190 190 191 191 191 192 192 192
193 193 193 194 194 194 195 195 195 196 196 196 197 197 197 198 198
198 199 199 199 200 200 200 201 201 201 202 202 202 203 203 203 204
204 204 205 205 205 206 206 206 207 207 207 208 208 208 209 209 209
210 210 210 211 211 211 212 212 212 213 213 213 214 214 214 215 215
215 216 216 216 217 217 217 218 218 218 219 219 219 220 220 220 221
221 221 222 222 222 223 223 223 224 224 224 225 225 225 226 226 226
227 227 227 228 228 228 229 229 229 230 230 230 231 231 231 232 232
232 233 233 233 234 234 234 235 235 235 236 236 236 237 237 237 238
238 238 239 239 239 240 240 240 241 241 241 242 242 242 243 243 243
244 244 244 245 245 245 246 246 246 247 247 247 248 248 248 249 249
249 250 250 250 251 251 251 252 252 252 253 253 253 254 254 254 255
255 255 126 105 64 253 0 0 0 9 112 72 89 115 0 0 11 19 0 0 11 19 1
0 154 156 24 0 0 2 74 73 68 65 84 72 137 189 85 219 182 234 32 12 12
33 36 244 66 250 255 127 123 134 80 171 118 239 109 235 203 25 186
170 11 153 76 110 68 218 190 4 253 39 130 187 167 128 123 187 67 32
91 36 27 128 119 189 67 168 235 188 150 210 159 105 177 11 137 32 200
50 175 203 60 207 203 186 76 230 219 71 202 174 16 231 231 121 90 215
149 218 37 33 229 178 226 48 48 47 197 52 93 17 26 8 203 78 152 74
185 71 152 226 60 0 194 231 204 30 10 79 194 45 133 61 134 169 199
112 67 65 144 156 112 106 177 245 22 33 163 14 40 193 146 87 153 110
197 32 101 89 74 199 186 220 82 240 106 229 64 86 190 36 48 105 205
37 75 71 85 242 79 231 163 210 206 206 53 87 82 85 34 254 120 124 16
154 67 193 164 14 232 31 160 118 184 180 105 191 8 120 134 87 103 88
14 24 69 27 7 161 26 51 177 34 65 0 159 64 89 186 125 197 213 58 8
2 127 96 42 119 27 143 53 158 222 234 50 132 139 120 58 234 96 20 94
122 242 95 192 35 6 203 212 187 44 234 32 185 135 211 122 186 222 16
83 193 119 181 78 216 158 132 22 103 219 187 4 146 204 169 197 215
198 191 16 144 94 122 181 207 185 84 39 13 202 246 66 216 82 16 90
35 4 6 62 2 109 225 73 171 37 111 216 99 8 135 66 123 33 108 27 215
82 80 53 20 28 69 111 14 186 80 206 12 43 86 209 45 103 66 111 64 164
149 123 27 90 49 74 138 55 90 209 91 83 244 153 38 16 248 65 104 146
155 224 110 246 145 137 115 21 37 52 50 83 142 220 195 122 215 246
147 66 152 105 9 134 164 151 190 136 105 159 63 153 145 90 180 178
16 189 43 192 56 108 131 2 203 180 17 70 172 213 134 153 11 151 194
148 255 136 1 81 114 53 171 8 162 79 101 117 41 232 55 184 34 216 68
125 210 89 1 117 72 78 162 48 164 232 182 228 157 46 184 37 181 82
252 11 208 89 161 87 26 63 40 50 196 163 167 120 111 221 81 197 31
10 113 28 219 112 73 219 94 234 215 178 191 43 200 184 126 105 116
230 163 5 121 172 128 159 20 136 112 69 168 183 39 54 211 142 93 162
115 232 77 161 87 45 160 127 221 124 180 87 122 81 216 242 49 147 206
168 99 97 52 160 17 15 66 170 229 6 76 14 151 92 197 6 242 219 26 31
251 11 245 121 102 137 181 94 67 199 140 139 24 18 210 112 9 30 67
154 30 105 184 198 115 84 126 133 175 9 255 0 35 195 94 127 163 236
191 0 0 0 0 0 73 69 78 68 174 66 96 130;
#X obj 44 24 inlet;
#X obj 44 1379 outlet;
#X text 152 64 favicon hexadecimal;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X restore 128 -361 pd favicon;
#X text 290 -362 <- stores webpage;
#X obj 247 13 list prepend 72 84 84 80 47 49 46 49 32 50 48 48 32 79
75 13 10 67 111 110 110 101 99 116 105 111 110 58 32 99 108 111 115
101 13 10 67 97 99 104 101 45 67 111 110 116 114 111 108 58 32 110
111 45 99 97 99 104 101 44 32 110 111 45 115 116 111 114 101 13 10
69 120 112 105 114 101 115 58 32 87 101 100 44 32 48 56 32 65 117 103
32 49 57 55 51 32 49 55 58 48 48 58 48 48 32 71 77 84 13 10 67 111
110 116 101 110 116 45 84 121 112 101 58 32 116 101 120 116 47 104
116 109 108 13 10;
#X text 489 -109 http header 'content length';
#X text 488 -9 other http headers;
#X connect 0 0 22 0;
#X connect 1 0 0 0;
#X connect 1 1 5 0;
#X connect 2 0 3 0;
#X connect 3 1 1 0;
#X connect 5 0 24 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 15 0;
#X connect 8 1 9 0;
#X connect 9 0 12 0;
#X connect 10 0 12 0;
#X connect 10 1 16 1;
#X connect 11 0 13 0;
#X connect 12 0 7 0;
#X connect 12 1 11 0;
#X connect 13 0 16 0;
#X connect 14 0 15 1;
#X connect 14 1 16 1;
#X connect 15 0 17 0;
#X connect 16 0 14 0;
#X connect 17 0 18 0;
#X connect 18 0 19 1;
#X connect 19 0 26 0;
#X connect 20 0 19 0;
#X connect 20 1 21 0;
#X connect 21 0 10 0;
#X connect 22 0 20 0;
#X connect 23 0 22 1;
#X connect 24 0 4 0;
#X connect 26 0 4 0;
#X restore 756 399 pd webserver;
#X obj 173 543 loadbang;
#X obj 104 663 list prepend;
#X obj 104 703 list append 13 10;
#X msg 173 569 72 84 84 80 47 49 46 49 32 49 48 49 32 87 101 98 32
83 111 99 107 101 116 32 80 114 111 116 111 99 111 108 32 72 97 110
100 115 104 97 107 101 13 10 85 112 103 114 97 100 101 58 32 119 101
98 115 111 99 107 101 116 13 10 67 111 110 110 101 99 116 105 111 110
58 32 85 112 103 114 97 100 101 13 10;
#X obj 756 566 list prepend;
#X text 251 405 <- PROCESS WEBSOCKET RESPONSE KEY;
#X text 838 399 <- WEB SERVER;
#X text 218 702 final'<cr><lf>' (empty line);
#X text 845 228 intercept "GET /" line;
#X obj 610 23 inlet;
#N canvas 135 63 396 392 splitline 0;
#X obj 43 81 route 10 13;
#X obj 106 134 t l l;
#X obj 85 185 list;
#X obj 106 107 list prepend;
#X obj 43 24 inlet;
#X obj 143 308 outlet;
#X obj 86 211 t l b;
#X obj 86 247 route bang;
#X obj 86 308 outlet;
#X connect 0 0 2 0;
#X connect 0 2 3 0;
#X connect 1 0 2 1;
#X connect 1 1 3 1;
#X connect 2 0 6 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 6 0 7 0;
#X connect 6 1 3 1;
#X connect 6 1 2 1;
#X connect 7 0 8 0;
#X connect 7 1 5 0;
#X restore 28 78 pd splitline;
#X obj 28 198 list;
#X obj 28 225 route bang;
#X obj 756 480 t l b;
#X obj 783 508 i;
#X msg 825 540 send \$1;
#X obj 104 748 t l b;
#X obj 173 776 i;
#X obj 783 896 outlet;
#X text 828 896 other http responses;
#X obj 756 606 t b l;
#X msg 679 726 list client;
#X text 71 21 HTTP requests;
#X text 553 22 webpage;
#X text 839 22 current socket;
#X text 148 899 'handshake' response (and socket number ->);
#X text 118 378 WEBSOCKET HANDSHAKE;
#X obj 104 345 list;
#X obj 140 251 list length;
#X obj 535 448 print websocket-server;
#X obj 535 401 t b b;
#X obj 104 322 select 1;
#X obj 85 251 t b b l;
#X obj 140 224 r websockets-list;
#X obj 104 276 i;
#X obj 318 251 <= 24;
#X floatatom 319 218 5 0 0 0 - - -, f 5;
#X obj 104 299 < 24;
#X msg 535 424 connections limit reached (max 24);
#X obj 679 755 t b l;
#X obj 679 829 list;
#X obj 679 806 select 1;
#X text 363 726 send 'client' message to [iemnet/tcpserver] only ->
socket-list will be received from its 5th outlet' \; (see [pd dispatch-sockets]
in upper abstraction);
#X obj 679 782 i;
#X obj 720 755 r iemnet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 21 0;
#X connect 3 0 30 0;
#X connect 4 0 18 0;
#X connect 4 0 15 0;
#X connect 7 0 31 1;
#X connect 7 1 14 0;
#X connect 9 0 34 1;
#X connect 9 0 37 1;
#X connect 10 0 11 1;
#X connect 11 0 5 0;
#X connect 14 0 17 1;
#X connect 15 0 14 1;
#X connect 17 0 19 0;
#X connect 18 0 7 1;
#X connect 19 0 33 0;
#X connect 20 0 23 0;
#X connect 21 0 22 0;
#X connect 22 0 36 0;
#X connect 23 0 21 1;
#X connect 24 0 40 0;
#X connect 29 0 19 1;
#X connect 30 0 31 0;
#X connect 30 1 7 0;
#X connect 31 0 32 0;
#X connect 32 0 17 0;
#X connect 32 1 52 0;
#X connect 33 0 24 0;
#X connect 33 1 34 0;
#X connect 34 0 35 0;
#X connect 35 0 24 1;
#X connect 36 0 11 0;
#X connect 36 1 37 0;
#X connect 37 0 10 0;
#X connect 37 0 12 0;
#X connect 40 0 41 0;
#X connect 40 1 38 0;
#X connect 41 0 59 0;
#X connect 47 0 0 0;
#X connect 48 0 54 1;
#X connect 50 0 58 0;
#X connect 50 1 41 0;
#X connect 51 0 47 0;
#X connect 51 1 50 0;
#X connect 52 0 31 1;
#X connect 52 1 54 0;
#X connect 52 2 47 1;
#X connect 53 0 48 0;
#X connect 54 0 57 0;
#X connect 56 0 55 0;
#X connect 57 0 51 0;
#X connect 58 0 49 0;
#X connect 59 0 63 0;
#X connect 59 1 60 1;
#X connect 60 0 38 0;
#X connect 61 0 60 0;
#X connect 63 0 61 0;
#X connect 64 0 63 1;
#X restore 320 187 pd websocket-http;
#X text 610 294 detects disconnections;
#X text 393 266 add to websocket list;
#X text 689 336 removes socket from \; websocket clients list;
#X text 972 565 output connected \; websockets list ->;
#X text 1031 175 current websockets list;
#X text 387 129 route websockets/http;
#X text 764 573 active client socket ->;
#X text 631 568 number of connected \; <- websocket clients;
#N canvas 89 51 971 790 dispatch-sockets 0;
#X obj 27 320 route;
#X obj 54 342 route;
#X obj 81 364 route;
#X obj 108 386 route;
#X obj 390 119 loadbang;
#X obj 354 211 list append;
#X obj 390 148 t b b;
#X obj 689 740 outlet;
#X obj 27 24 inlet;
#X obj 78 24 inlet;
#X obj 135 408 route;
#X obj 162 430 route;
#X obj 189 452 route;
#X obj 216 474 route;
#X obj 27 133 pack f f;
#X obj 27 107 i;
#X obj 27 82 t b f;
#X obj 675 513 unpack f f;
#X obj 168 24 inlet;
#X obj 168 81 route client;
#X obj 225 135 list append -1;
#X obj 732 539 route -1;
#X obj 675 618 spigot;
#X obj 168 107 unpack f f;
#X obj 777 567 t b f;
#X obj 708 593 1;
#X obj 734 593 0;
#X obj 758 513 loadbang;
#X obj 675 644 t b f;
#X obj 289 666 route -1;
#X obj 334 739 outlet;
#X msg 787 686 list disconnectsocket \$1;
#X obj 787 740 outlet;
#X obj 243 313 route;
#X obj 270 335 route;
#X obj 297 357 route;
#X obj 324 379 route;
#X obj 351 401 route;
#X obj 378 423 route;
#X obj 405 445 route;
#X obj 432 467 route;
#X obj 454 315 route;
#X obj 463 337 route;
#X obj 513 359 route;
#X obj 540 381 route;
#X obj 567 403 route;
#X obj 594 425 route;
#X obj 621 447 route;
#X obj 648 469 route;
#X obj 354 79 r websockets-list;
#X text 38 48 websocket byteflow;
#X text 833 739 to 'send buffer';
#X obj 354 261 unpack f f f f f f f f f f f f f f f f f f f f f f f
f;
#X obj 354 236 list split 24;
#X msg 417 173 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
-1 -1 -1 -1 -1 -1;
#X text 691 261 set 'route' objets to web-sockets numbers;
#X text 593 77 (sequential to avoid list recursion stack-overflows)
;
#X text 455 147 unallocated 'route' objects get '-1' value;
#X text 138 152 trick to use same path to \; disconnect all 'non-websockets'
;
#X text 508 739 http connection \, to webserver;
#X text 97 738 connected websocket \, to websocket-data;
#X text 454 235 (max: 24 websocket connections);
#X text 36 275 dispatch websockets/http connections;
#X text 787 640 disconnect all unused \; sockets keeped 'alive' \;
by [iemnet/tcpserver];
#X text 212 24 list of sockets (from [iemnet/tcpserver] only);
#X text 605 55 ROUTE WEBSOCKETS/HTTP & DISCONNECT HTTP SOCKETS;
#X connect 0 0 29 0;
#X connect 0 1 1 0;
#X connect 1 0 29 0;
#X connect 1 1 2 0;
#X connect 2 0 29 0;
#X connect 2 1 3 0;
#X connect 3 0 29 0;
#X connect 3 1 10 0;
#X connect 4 0 6 0;
#X connect 5 0 53 0;
#X connect 6 0 5 0;
#X connect 6 1 54 0;
#X connect 8 0 16 0;
#X connect 9 0 15 1;
#X connect 10 0 29 0;
#X connect 10 1 11 0;
#X connect 11 0 29 0;
#X connect 11 1 12 0;
#X connect 12 0 29 0;
#X connect 12 1 13 0;
#X connect 13 0 29 0;
#X connect 13 1 33 0;
#X connect 14 0 0 0;
#X connect 15 0 14 0;
#X connect 16 0 15 0;
#X connect 16 1 14 1;
#X connect 17 0 22 0;
#X connect 17 1 21 0;
#X connect 18 0 19 0;
#X connect 19 0 23 0;
#X connect 20 0 0 0;
#X connect 21 0 25 0;
#X connect 21 1 24 0;
#X connect 22 0 28 0;
#X connect 23 1 20 0;
#X connect 24 0 26 0;
#X connect 24 1 7 0;
#X connect 25 0 22 1;
#X connect 26 0 22 1;
#X connect 27 0 26 0;
#X connect 28 0 26 0;
#X connect 28 1 31 0;
#X connect 29 1 30 0;
#X connect 31 0 32 0;
#X connect 33 0 29 0;
#X connect 33 1 34 0;
#X connect 34 0 29 0;
#X connect 34 1 35 0;
#X connect 35 0 29 0;
#X connect 35 1 36 0;
#X connect 36 0 29 0;
#X connect 36 1 37 0;
#X connect 37 0 29 0;
#X connect 37 1 38 0;
#X connect 38 0 29 0;
#X connect 38 1 39 0;
#X connect 39 0 29 0;
#X connect 39 1 40 0;
#X connect 40 0 29 0;
#X connect 40 1 41 0;
#X connect 41 0 29 0;
#X connect 41 1 42 0;
#X connect 42 0 29 0;
#X connect 42 1 43 0;
#X connect 43 0 29 0;
#X connect 43 1 44 0;
#X connect 44 0 29 0;
#X connect 44 1 45 0;
#X connect 45 0 29 0;
#X connect 45 1 46 0;
#X connect 46 0 29 0;
#X connect 46 1 47 0;
#X connect 47 0 29 0;
#X connect 47 1 48 0;
#X connect 48 0 29 0;
#X connect 48 1 17 0;
#X connect 49 0 5 0;
#X connect 52 0 0 1;
#X connect 52 1 1 1;
#X connect 52 2 2 1;
#X connect 52 3 3 1;
#X connect 52 4 10 1;
#X connect 52 5 11 1;
#X connect 52 6 12 1;
#X connect 52 7 13 1;
#X connect 52 8 33 1;
#X connect 52 9 34 1;
#X connect 52 10 35 1;
#X connect 52 11 36 1;
#X connect 52 12 37 1;
#X connect 52 13 38 1;
#X connect 52 14 39 1;
#X connect 52 15 40 1;
#X connect 52 16 41 1;
#X connect 52 17 42 1;
#X connect 52 18 43 1;
#X connect 52 19 44 1;
#X connect 52 20 45 1;
#X connect 52 21 46 1;
#X connect 52 22 47 1;
#X connect 52 23 48 1;
#X connect 53 0 52 0;
#X connect 54 0 5 1;
#X restore 265 130 pd dispatch-sockets;
#X text 621 20 to tcpserver outlet 2 (number of connections);
#X text 962 20 to tcpserver outlet 3 (current socket);
#X text 978 49 to tcpserver outlet 5 (for socket list);
#X obj 320 313 t b;
#N canvas 86 51 591 605 detect_mrpeach/iemnet 0;
#X obj 78 464 list split 1;
#X obj 32 325 t b l b;
#X obj 145 494 list;
#X obj 32 19 inlet;
#X obj 201 563 outlet;
#X obj 78 493 t b f;
#X obj 118 390 list;
#X obj 51 389 t b l;
#X obj 32 413 list;
#X obj 78 439 t l;
#X obj 51 354 list split 100;
#X obj 32 65 t l l;
#X obj 77 95 list length;
#X obj 104 253 0;
#X obj 77 253 1;
#X obj 202 254 0;
#X obj 175 254 1;
#X obj 32 288 spigot 1;
#X obj 130 288 spigot 0;
#X obj 77 148 == 1;
#X obj 77 122 change;
#X obj 77 176 select 0 1;
#X obj 32 218 t l;
#X obj 148 218 t b b b;
#X obj 255 254 0;
#X obj 282 254 1;
#X obj 77 218 t b b b;
#X text 151 349 split incoming data list to \; prevent stack overlflows
;
#X text 166 459 split list to bytes \; for stream-based operations
;
#X text 316 287 <- this will change some operations \; behaviour in
[pd send-buffer] \; and [pd websocket-http];
#X text 201 39 tcpserver externals output incoming messages differently:
mrpeach/tcpserver outputs lists \; iemnet/tcpserver outputs stream
of bytes \; detect [iemnet/tcpserver] when incoming list length ==
1;
#X text 201 217 when mrpeach/tcpserver is used \, output lists as single
bytes;
#X obj 255 288 s iemnet;
#X text 317 254 <- iemnet detected;
#X connect 0 0 5 0;
#X connect 0 1 2 1;
#X connect 1 0 8 0;
#X connect 1 1 10 0;
#X connect 2 0 0 0;
#X connect 3 0 11 0;
#X connect 5 0 2 0;
#X connect 5 1 4 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 7 1 9 0;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 10 0 7 0;
#X connect 10 1 6 1;
#X connect 10 2 8 1;
#X connect 11 0 22 0;
#X connect 11 1 12 0;
#X connect 12 0 20 0;
#X connect 13 0 17 1;
#X connect 14 0 17 1;
#X connect 15 0 18 1;
#X connect 16 0 18 1;
#X connect 17 0 1 0;
#X connect 18 0 4 0;
#X connect 19 0 21 0;
#X connect 20 0 19 0;
#X connect 21 0 26 0;
#X connect 21 1 23 0;
#X connect 22 0 17 0;
#X connect 22 0 18 0;
#X connect 23 0 13 0;
#X connect 23 1 16 0;
#X connect 23 2 25 0;
#X connect 24 0 32 0;
#X connect 25 0 32 0;
#X connect 26 0 14 0;
#X connect 26 1 15 0;
#X connect 26 2 24 0;
#X restore 265 92 pd detect_mrpeach/iemnet;
#N canvas 84 51 766 937 websocket-send 0;
#X obj 25 19 inlet;
#X obj 40 647 list;
#X obj 97 698 list split 1;
#X obj 97 774 route bang;
#X obj 97 750 list;
#X obj 124 822 list append;
#X obj 40 672 route bang;
#X msg 124 798 send \$1;
#X obj 220 889 outlet;
#X obj 97 725 t b f;
#X obj 250 70 list split 1;
#X obj 281 124 list;
#X msg 289 573 send \$1;
#X obj 281 149 route bang;
#X obj 220 600 list prepend;
#N canvas 141 90 496 568 message-length-header 0;
#X obj 35 15 inlet;
#X obj 36 422 list prepend;
#X obj 156 333 list prepend 126;
#X obj 36 139 t l l;
#X obj 105 172 list length;
#X obj 105 200 moses 126;
#X obj 156 266 expr $i1 / 256 \; $i1 % 256;
#X obj 156 305 pack f f;
#X obj 35 65 list split 1;
#X obj 36 113 list;
#X obj 35 90 t b f;
#X obj 36 451 list prepend;
#X obj 36 515 outlet;
#X obj 280 267 expr ($i1 >> 24) % 256 \; ($i1 >> 16) % 256 \; ($i1
>> 8) % 256 \; $i1 % 256 \;;
#X obj 280 333 pack f f f f;
#X obj 280 360 list prepend 127 0 0 0 0;
#X obj 156 240 moses 65536;
#X text 162 222 16bit;
#X text 112 221 8bit;
#X text 278 219 64bit (but pd limit is 20bit);
#X text 174 199 V websocket 'extended payload length' V;
#X connect 0 0 8 0;
#X connect 1 0 11 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X connect 3 1 4 0;
#X connect 4 0 5 0;
#X connect 5 0 1 1;
#X connect 5 1 16 0;
#X connect 6 0 7 0;
#X connect 6 1 7 1;
#X connect 7 0 2 0;
#X connect 8 0 10 0;
#X connect 8 1 9 1;
#X connect 9 0 3 0;
#X connect 10 0 9 0;
#X connect 10 1 11 1;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 13 1 14 1;
#X connect 13 2 14 2;
#X connect 13 3 14 3;
#X connect 14 0 15 0;
#X connect 15 0 1 1;
#X connect 16 0 6 0;
#X connect 16 1 13 0;
#X restore 338 473 pd message-length-header;
#X obj 250 21 inlet;
#X text 66 20 <- broadcast;
#X text 290 21 <- send to client;
#X obj 25 69 route bang;
#X text 494 474 <- WEBSOCKET DATA LENGTH;
#X obj 40 521 list prepend;
#X msg 174 481 send;
#X msg 109 481 broadcast;
#X obj 40 570 route broadcast send;
#X obj 40 545 list trim;
#X obj 82 98 t a b;
#X obj 250 98 t b b f;
#X obj 338 300 list prepend 129;
#X obj 377 325 list prepend 130;
#X obj 403 197 t b;
#X msg 403 224 specify 'text' or 'binary' before data;
#X obj 403 252 print websocket-server;
#X text 77 642 BROADCAST : send to \; all websockets clients;
#X obj 494 400 list prepend 138;
#X obj 61 624 r websockets-list;
#X obj 40 600 t b a;
#X obj 338 174 list trim;
#X obj 438 23 inlet;
#X obj 438 70 t b;
#X msg 438 197 specify "broadcast' or 'send <socket>';
#X obj 496 144 route float;
#X obj 338 437 t l l;
#X obj 496 121 list split 1;
#X msg 453 171 ascii-codes list only (use [tof/to_ascii_code]);
#X obj 338 275 route text binary close ping pong;
#X obj 416 350 list prepend 136;
#X obj 455 375 list prepend 137;
#X text 549 276 <- message type;
#X connect 0 0 19 0;
#X connect 1 0 6 0;
#X connect 2 0 9 0;
#X connect 2 1 4 1;
#X connect 3 1 2 0;
#X connect 4 0 3 0;
#X connect 5 0 8 0;
#X connect 6 1 2 0;
#X connect 7 0 5 0;
#X connect 9 0 4 0;
#X connect 9 1 7 0;
#X connect 10 0 27 0;
#X connect 10 1 11 1;
#X connect 11 0 13 0;
#X connect 12 0 14 1;
#X connect 13 1 37 0;
#X connect 14 0 8 0;
#X connect 15 0 21 0;
#X connect 16 0 10 0;
#X connect 19 1 26 0;
#X connect 21 0 25 0;
#X connect 22 0 21 1;
#X connect 23 0 21 1;
#X connect 24 0 36 0;
#X connect 24 1 14 0;
#X connect 25 0 24 0;
#X connect 26 0 45 0;
#X connect 26 1 23 0;
#X connect 27 0 11 0;
#X connect 27 1 22 0;
#X connect 27 2 12 0;
#X connect 28 0 42 0;
#X connect 29 0 42 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 34 0 42 0;
#X connect 35 0 1 1;
#X connect 36 0 1 0;
#X connect 36 1 5 1;
#X connect 37 0 45 0;
#X connect 38 0 39 0;
#X connect 39 0 40 0;
#X connect 40 0 32 0;
#X connect 41 1 44 0;
#X connect 42 0 15 0;
#X connect 43 0 41 0;
#X connect 44 0 32 0;
#X connect 45 0 28 0;
#X connect 45 1 29 0;
#X connect 45 2 43 0;
#X connect 45 2 46 0;
#X connect 45 3 43 0;
#X connect 45 3 47 0;
#X connect 45 4 43 0;
#X connect 45 4 34 0;
#X connect 45 5 30 0;
#X connect 46 0 42 0;
#X connect 47 0 42 0;
#X restore 28 189 pd websocket-send;
#X text 304 20 connect to tcpserver outlet 1 (data output);
#X text 984 116 WEBSOCKET-SERVER MAIN WINDOW;
#X text 73 575 <- send to tcpserver inlet;
#X connect 0 0 25 0;
#X connect 1 0 10 1;
#X connect 1 0 14 1;
#X connect 1 0 35 2;
#X connect 1 0 17 1;
#X connect 1 0 44 1;
#X connect 2 0 49 0;
#X connect 5 0 6 1;
#X connect 6 0 8 0;
#X connect 7 0 5 1;
#X connect 7 0 6 0;
#X connect 7 1 5 0;
#X connect 8 0 10 0;
#X connect 9 0 7 0;
#X connect 10 0 15 0;
#X connect 12 0 13 0;
#X connect 13 0 48 0;
#X connect 14 0 3 0;
#X connect 15 0 29 0;
#X connect 15 1 14 0;
#X connect 17 0 33 0;
#X connect 17 1 4 0;
#X connect 17 2 26 0;
#X connect 17 3 3 0;
#X connect 18 0 12 0;
#X connect 18 1 33 0;
#X connect 19 0 26 0;
#X connect 25 1 20 0;
#X connect 26 0 27 0;
#X connect 27 0 50 0;
#X connect 27 1 50 1;
#X connect 27 2 35 1;
#X connect 27 3 50 2;
#X connect 29 0 11 0;
#X connect 30 0 29 1;
#X connect 31 0 30 0;
#X connect 32 0 44 2;
#X connect 33 0 16 0;
#X connect 35 0 18 0;
#X connect 35 1 12 1;
#X connect 35 2 33 0;
#X connect 44 0 17 0;
#X connect 44 1 35 0;
#X connect 44 2 33 0;
#X connect 48 0 15 0;
#X connect 49 0 44 0;
#X connect 50 0 33 0;
#X restore 182 130 pd websocket-server;
#X obj 257 182 print WEBSOCKETS LIST;
#X msg 48 45 test;
#X obj 17 139 print;
#N canvas 409 120 450 300 sensors 0;
#X obj 135 30 r GPIO-b;
#X obj 202 30 r sendGPIO;
#X obj 202 106 list prepend;
#X obj 202 128 t l;
#X obj 131 66 t b b;
#X obj 132 106 list;
#X obj 202 59 list prepend |;
#X obj 132 199 list split 1;
#X obj 166 220 list prepend sensors%;
#X obj 166 241 outlet;
#X connect 0 0 4 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 2 0 5 1;
#X connect 3 0 2 1;
#X connect 4 0 5 1;
#X connect 4 0 2 1;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 2 0;
#X connect 7 1 8 0;
#X connect 8 0 9 0;
#X restore 29 9 pd sensors;
#N canvas 482 471 450 300 actuators 0;
#X obj 131 14 r GPIO-b;
#X obj 202 106 list prepend;
#X obj 202 128 t l;
#X obj 131 66 t b b;
#X obj 132 106 list;
#X obj 346 172 print;
#X obj 202 59 list prepend |;
#X obj 202 235 outlet;
#X obj 91 140 list split 1;
#X obj 202 214 list prepend actuators%;
#X obj 202 34 r sendAction;
#X obj 131 36 del 31;
#X connect 0 0 11 0;
#X connect 1 0 2 0;
#X connect 1 0 4 1;
#X connect 2 0 1 1;
#X connect 3 0 4 1;
#X connect 3 0 1 1;
#X connect 3 1 4 0;
#X connect 4 0 8 0;
#X connect 6 0 1 0;
#X connect 8 1 9 0;
#X connect 9 0 7 0;
#X connect 10 0 6 0;
#X connect 11 0 3 0;
#X restore 138 13 pd actuators;
#X obj 273 79 tcpserver 6789;
#N canvas 878 327 875 609 SEND 0;
#X obj 229 494 outlet;
#X obj 246 237 0;
#X obj 274 237 1;
#X obj 229 263 spigot 1;
#X obj 229 287 t l b b;
#X obj 229 405 list prepend;
#X obj 229 180 list prepend text;
#X msg 298 378 broadcast;
#N canvas 362 174 840 700 socket-gui 0;
#X obj 370 70 r websockets-list;
#X obj 139 223 list;
#X obj 174 283 unpack f;
#X obj 140 250 list split 0;
#X obj 209 223 - 1;
#X obj 100 168 route 0;
#X obj 139 197 t b f;
#X obj 367 147 list length;
#X msg 367 476 range 0 \$1;
#X obj 100 650 outlet;
#X msg 100 471 broadcast;
#X msg 174 534 send \$1;
#N canvas 1381 547 298 342 show-message 0;
#X obj 79 88 list;
#X msg 182 216 set;
#X obj 98 139 list split 1;
#X obj 111 167 list;
#X obj 98 192 t b a;
#X msg 125 216 add2 \$1;
#X obj 79 37 inlet;
#X obj 125 280 outlet;
#X obj 182 174 loadbang;
#X obj 79 111 t b l b;
#X connect 0 0 9 0;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 0 0;
#X connect 8 0 1 0;
#X connect 9 0 7 0;
#X connect 9 1 2 0;
#X connect 9 2 3 1;
#X connect 9 2 1 0;
#X restore 100 602 pd show-message;
#X msg 239 474 socket \$1;
#X obj 100 100 cnv 15 150 17 empty gui-client-label broadcast 60 9
0 12 -262144 -1 0;
#X obj 100 100 nbx 4 16 0 0 0 0 s-gui-select-client r-gui-select-client
empty 0 -8 0 12 -262144 -1 -1 0 256;
#X obj 239 601 s gui-client-label;
#X msg 239 534 label \$1;
#X obj 434 499 loadbang;
#X obj 367 601 s r-gui-select-client;
#X msg 393 534 vis_size 150 17 \, label_pos 60 9 \, label_font 0 12
\, color 0 22;
#X msg 393 556 range 0 0;
#X obj 413 264 i;
#X obj 386 288 <;
#X obj 386 237 t f b;
#X obj 386 344 i;
#X obj 531 226 list split 1;
#X obj 531 194 list;
#X obj 531 263 ==;
#X obj 571 400 list;
#X obj 531 292 select 1 0;
#X obj 531 153 t b f b;
#X obj 367 207 t f f f;
#X obj 663 235 + 1;
#X obj 630 234 i;
#X obj 654 203 1;
#X obj 521 341 i;
#X obj 623 169 t l b;
#X obj 723 275 print;
#X obj 721 244 i;
#X msg 782 210 3;
#X msg 704 170 bang;
#X msg 751 173 1;
#X obj 569 428 route bang;
#X obj 570 460 0;
#X obj 437 442 print TRUC;
#X obj 365 112 t l l l;
#X msg 102 41 set \$1;
#X obj 322 207 0;
#X obj 326 175 select 0;
#X obj 386 315 select 1;
#X obj 109 416 loadbang;
#X text 525 46 don't know how exactly... but it works :);
#X obj 239 503 list2symbol;
#X connect 0 0 46 0;
#X connect 1 0 3 0;
#X connect 2 0 11 0;
#X connect 2 0 13 0;
#X connect 2 0 25 1;
#X connect 3 1 2 0;
#X connect 4 0 3 1;
#X connect 5 0 10 0;
#X connect 5 1 6 0;
#X connect 6 0 1 0;
#X connect 6 1 4 0;
#X connect 7 0 32 0;
#X connect 8 0 19 0;
#X connect 10 0 12 0;
#X connect 10 0 53 0;
#X connect 11 0 12 0;
#X connect 12 0 9 0;
#X connect 13 0 53 0;
#X connect 15 0 5 0;
#X connect 17 0 16 0;
#X connect 18 0 20 0;
#X connect 18 0 21 0;
#X connect 20 0 16 0;
#X connect 21 0 19 0;
#X connect 22 0 23 1;
#X connect 23 0 50 0;
#X connect 24 0 22 1;
#X connect 24 0 23 0;
#X connect 24 1 22 0;
#X connect 25 0 31 0;
#X connect 26 0 28 0;
#X connect 26 1 29 1;
#X connect 27 0 26 0;
#X connect 28 0 30 0;
#X connect 29 0 43 0;
#X connect 30 0 36 0;
#X connect 30 1 29 0;
#X connect 31 0 27 0;
#X connect 31 1 28 1;
#X connect 31 2 35 0;
#X connect 32 0 8 0;
#X connect 32 1 24 0;
#X connect 32 2 49 0;
#X connect 33 0 34 1;
#X connect 34 0 33 0;
#X connect 34 0 36 1;
#X connect 35 0 34 0;
#X connect 36 0 47 0;
#X connect 37 0 26 0;
#X connect 37 1 34 0;
#X connect 39 0 38 0;
#X connect 40 0 39 1;
#X connect 41 0 39 0;
#X connect 42 0 39 0;
#X connect 43 0 44 0;
#X connect 43 0 10 0;
#X connect 43 1 37 0;
#X connect 44 0 47 0;
#X connect 46 0 1 1;
#X connect 46 1 7 0;
#X connect 46 2 27 1;
#X connect 47 0 15 0;
#X connect 48 0 47 0;
#X connect 49 0 48 0;
#X connect 49 0 10 0;
#X connect 50 0 25 0;
#X connect 51 0 10 0;
#X connect 53 0 17 0;
#X coords 0 -1 1 1 150 16 1 100 100;
#X restore 299 353 pd socket-gui;
#X text 366 378 <- specify 'send <socket-number' or broadcast;
#X text 312 405 <- and put it before <type> <data>;
#X text 363 150 <- convert to ascii-codes for <DATA>;
#X text 363 179 <- put <TYPE> before <data>;
#X obj 248 312 delay 30;
#X text 278 493 <- to [pd websocket-server] inlet;
#X text 303 311 (<- add more delay if needed \, when send-buffer struggles)
;
#X text 283 275 get new message to send every 30ms to prevent overflow
\; (especially when 'flames" broadcast its waveform array);
#X obj 229 150 any2bytes 128 -1;
#X obj 228 119 inlet;
#X connect 1 0 3 1;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 13 0;
#X connect 4 2 1 0;
#X connect 5 0 0 0;
#X connect 6 0 3 0;
#X connect 7 0 5 1;
#X connect 8 0 7 0;
#X connect 13 0 2 0;
#X connect 17 0 6 0;
#X connect 18 0 17 0;
#X restore 28 77 pd SEND;
#N canvas 878 334 875 609 SEND 0;
#X obj 229 494 outlet;
#X obj 246 237 0;
#X obj 274 237 1;
#X obj 229 263 spigot 1;
#X obj 229 287 t l b b;
#X obj 229 405 list prepend;
#X obj 229 180 list prepend text;
#X msg 298 378 broadcast;
#N canvas 368 177 840 700 socket-gui 0;
#X obj 370 70 r websockets-list;
#X obj 139 223 list;
#X obj 174 283 unpack f;
#X obj 140 250 list split 0;
#X obj 209 223 - 1;
#X obj 100 168 route 0;
#X obj 139 197 t b f;
#X obj 367 147 list length;
#X msg 367 476 range 0 \$1;
#X obj 100 650 outlet;
#X obj 239 503 l2s;
#X msg 100 471 broadcast;
#X msg 174 534 send \$1;
#N canvas 1381 547 298 342 show-message 0;
#X obj 79 88 list;
#X msg 182 216 set;
#X obj 98 139 list split 1;
#X obj 111 167 list;
#X obj 98 192 t b a;
#X msg 125 216 add2 \$1;
#X obj 79 37 inlet;
#X obj 125 280 outlet;
#X obj 182 174 loadbang;
#X obj 79 111 t b l b;
#X connect 0 0 9 0;
#X connect 1 0 7 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 0 0;
#X connect 8 0 1 0;
#X connect 9 0 7 0;
#X connect 9 1 2 0;
#X connect 9 2 3 1;
#X connect 9 2 1 0;
#X restore 100 602 pd show-message;
#X msg 239 474 socket \$1;
#X obj 100 100 cnv 15 150 17 empty gui-client-label broadcast 60 9
0 12 -262144 -1 0;
#X obj 100 100 nbx 4 16 0 0 0 0 s-gui-select-client r-gui-select-client
empty 0 -8 0 12 -262144 -1 -1 0 256;
#X obj 239 601 s gui-client-label;
#X msg 239 534 label \$1;
#X obj 434 499 loadbang;
#X obj 367 601 s r-gui-select-client;
#X msg 393 534 vis_size 150 17 \, label_pos 60 9 \, label_font 0 12
\, color 0 22;
#X msg 393 556 range 0 0;
#X obj 413 264 i;
#X obj 386 288 <;
#X obj 386 237 t f b;
#X obj 386 344 i;
#X obj 531 226 list split 1;
#X obj 531 194 list;
#X obj 531 263 ==;
#X obj 571 400 list;
#X obj 531 292 select 1 0;
#X obj 531 153 t b f b;
#X obj 367 207 t f f f;
#X obj 663 235 + 1;
#X obj 630 234 i;
#X obj 654 203 1;
#X obj 521 341 i;
#X obj 623 169 t l b;
#X obj 723 275 print;
#X obj 721 244 i;
#X msg 782 210 3;
#X msg 704 170 bang;
#X msg 751 173 1;
#X obj 569 428 route bang;
#X obj 570 460 0;
#X obj 437 442 print TRUC;
#X obj 365 112 t l l l;
#X msg 102 41 set \$1;
#X obj 322 207 0;
#X obj 326 175 select 0;
#X obj 386 315 select 1;
#X obj 109 416 loadbang;
#X text 525 46 don't know how exactly... but it works :);
#X connect 0 0 47 0;
#X connect 1 0 3 0;
#X connect 2 0 12 0;
#X connect 2 0 14 0;
#X connect 2 0 26 1;
#X connect 3 1 2 0;
#X connect 4 0 3 1;
#X connect 5 0 11 0;
#X connect 5 1 6 0;
#X connect 6 0 1 0;
#X connect 6 1 4 0;
#X connect 7 0 33 0;
#X connect 8 0 20 0;
#X connect 10 0 18 0;
#X connect 11 0 13 0;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 9 0;
#X connect 14 0 10 0;
#X connect 16 0 5 0;
#X connect 18 0 17 0;
#X connect 19 0 21 0;
#X connect 19 0 22 0;
#X connect 21 0 17 0;
#X connect 22 0 20 0;
#X connect 23 0 24 1;
#X connect 24 0 51 0;
#X connect 25 0 23 1;
#X connect 25 0 24 0;
#X connect 25 1 23 0;
#X connect 26 0 32 0;
#X connect 27 0 29 0;
#X connect 27 1 30 1;
#X connect 28 0 27 0;
#X connect 29 0 31 0;
#X connect 30 0 44 0;
#X connect 31 0 37 0;
#X connect 31 1 30 0;
#X connect 32 0 28 0;
#X connect 32 1 29 1;
#X connect 32 2 36 0;
#X connect 33 0 8 0;
#X connect 33 1 25 0;
#X connect 33 2 50 0;
#X connect 34 0 35 1;
#X connect 35 0 34 0;
#X connect 35 0 37 1;
#X connect 36 0 35 0;
#X connect 37 0 48 0;
#X connect 38 0 27 0;
#X connect 38 1 35 0;
#X connect 40 0 39 0;
#X connect 41 0 40 1;
#X connect 42 0 40 0;
#X connect 43 0 40 0;
#X connect 44 0 45 0;
#X connect 44 0 11 0;
#X connect 44 1 38 0;
#X connect 45 0 48 0;
#X connect 47 0 1 1;
#X connect 47 1 7 0;
#X connect 47 2 28 1;
#X connect 48 0 16 0;
#X connect 49 0 48 0;
#X connect 50 0 49 0;
#X connect 50 0 11 0;
#X connect 51 0 26 0;
#X connect 52 0 11 0;
#X coords 0 -1 1 1 150 16 1 100 100;
#X restore 299 353 pd socket-gui;
#X text 366 378 <- specify 'send <socket-number' or broadcast;
#X text 312 405 <- and put it before <type> <data>;
#X text 363 150 <- convert to ascii-codes for <DATA>;
#X text 363 179 <- put <TYPE> before <data>;
#X obj 248 312 delay 30;
#X text 278 493 <- to [pd websocket-server] inlet;
#X text 303 311 (<- add more delay if needed \, when send-buffer struggles)
;
#X text 283 275 get new message to send every 30ms to prevent overflow
\; (especially when 'flames" broadcast its waveform array);
#X obj 229 150 any2bytes 128 -1;
#X obj 228 119 inlet;
#X connect 1 0 3 1;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 13 0;
#X connect 4 2 1 0;
#X connect 5 0 0 0;
#X connect 6 0 3 0;
#X connect 7 0 5 1;
#X connect 8 0 7 0;
#X connect 13 0 2 0;
#X connect 17 0 6 0;
#X connect 18 0 17 0;
#X restore 138 77 pd SEND;
#X connect 2 0 8 0;
#X connect 2 2 0 0;
#X connect 2 3 1 0;
#X connect 2 4 3 0;
#X connect 4 0 9 0;
#X connect 6 0 9 0;
#X connect 7 0 10 0;
#X connect 8 0 2 1;
#X connect 8 1 2 2;
#X connect 8 2 2 3;
#X connect 8 4 2 4;
#X connect 9 0 2 0;
#X connect 10 0 2 0;
#X restore 18 200 pd webserver;
#N canvas 1303 204 364 216 arduino 0;
#X obj 59 35 loadbang;
#X obj 59 80 metro 100;
#X obj 125 36 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 59 102 t b a;
#X obj 88 145 s GPIO-s;
#X obj 59 167 s GPIO-b;
#N canvas 860 95 450 300 gpio-control 0;
#X obj 192 263 outlet;
#X obj 249 180 list prepend dsensor;
#X obj 249 202 list trim;
#X obj 249 224 s sql;
#X obj 249 159 list prepend set;
#X obj 146 82 route set write monitor;
#X obj 144 132 del 500;
#X obj 145 112 b;
#X msg 138 193 metro 1;
#X msg 13 147 metro 0 \, setmode \$3;
#X obj 146 60 r GPIO-r;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 1 0;
#X connect 5 0 9 0;
#X connect 5 0 4 0;
#X connect 5 0 7 0;
#X connect 5 1 0 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 5 0;
#X restore 174 25 pd gpio-control;
#X obj 173 49 route metro;
#N canvas 29 51 450 300 pdpcduino 0;
#X obj 147 27 inlet;
#X obj 149 110 outlet;
#X restore 88 122 pd pdpcduino;
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 3 1 8 0;
#X connect 6 0 7 0;
#X connect 7 0 1 0;
#X connect 8 0 4 0;
#X restore 268 94 pd arduino;
#X text 348 94 <-- not finished yet;
#X text 29 16 patko2015 2016;
